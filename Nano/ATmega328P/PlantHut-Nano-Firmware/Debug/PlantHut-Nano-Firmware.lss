
PlantHut-Nano-Firmware.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00001d6e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001cfa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800100  00800100  00001d6e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d6e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001da0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001de0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e05  00000000  00000000  00001f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d70  00000000  00000000  00003d0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ff6  00000000  00000000  00004a7d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  00005a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d0  00000000  00000000  00005d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001422  00000000  00000000  00006430  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00007852  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__ctors_end>
       4:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
       8:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
       c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      10:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      14:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      18:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      1c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      20:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      24:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      28:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      2c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      30:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      34:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      38:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      3c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      40:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      44:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      48:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      4c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      50:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      54:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      58:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      5c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      60:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>
      64:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__c.2450+0x11>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__EEPROM_REGION_LENGTH__+0x2ae>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <font+0x261>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <font+0xd>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <font+0x4f>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <ssd1306_init_cmd>:
     162:	ae e3 20 00 b0 c8 00 10 40 a4 a1 a6 81 ff a8 3f     .. .....@......?
     172:	d3 00 d5 f0 d9 22 da 12 db 20 8d 14 af              ....."... ...

0000017f <font>:
	...
     187:	7e 81 95 b1 b1 95 81 7e 7e ff eb cf cf eb ff 7e     ~......~~......~
     197:	0e 1f 3f 7e 3f 1f 0e 00 08 1c 3e 7f 3e 1c 08 00     ..?~?.....>.>...
     1a7:	38 3a 9f ff 9f 3a 38 00 10 38 bc ff bc 38 10 00     8:...:8..8...8..
	...
     1d7:	70 f8 88 88 fd 7f 07 0f 00 4e 5f f1 f1 5f 4e 00     p........N_.._N.
	...
     1ef:	c0 ff 7f 05 05 65 7f 3f 99 5a 3c e7 e7 3c 5a 99     .....e.?.Z<..<Z.
     1ff:	7f 3e 3e 1c 1c 08 08 00 08 08 1c 1c 3e 3e 7f 00     .>>.........>>..
     20f:	00 24 66 ff ff 66 24 00 00 5f 5f 00 00 5f 5f 00     .$f..f$..__..__.
     21f:	06 0f 09 7f 7f 01 7f 7f da bf a5 a5 fd 59 03 02     .............Y..
     22f:	00 70 70 70 70 70 70 00 80 94 b6 ff ff b6 94 80     .pppppp.........
     23f:	00 04 06 7f 7f 06 04 00 00 10 30 7f 7f 30 10 00     ..........0..0..
     24f:	08 08 08 2a 3e 1c 08 00 08 1c 3e 2a 08 08 08 00     ...*>.....>*....
     25f:	3c 3c 20 20 20 20 20 00 08 1c 3e 08 08 3e 1c 08     <<     ...>..>..
     26f:	30 38 3c 3e 3e 3c 38 30 06 0e 1e 3e 3e 1e 0e 06     08<>><80...>>...
	...
     287:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
     297:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
     2a7:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
     2b7:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
     2c7:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
     2d7:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
     2e7:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
     2f7:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
     307:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
     317:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
     327:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
     337:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
     347:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
     357:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
     367:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
     377:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
     387:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
     397:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
     3a7:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
     3b7:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
     3c7:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
     3d7:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
     3e7:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
     3f7:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
     407:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
     417:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
     427:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
     437:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
     447:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
     457:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
     467:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
     477:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
     487:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
     497:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
     4a7:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
     4b7:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
     4c7:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
     4d7:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
     4e7:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
     4f7:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
     507:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
     517:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
     527:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
     537:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
     547:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
     557:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
     567:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............
     577:	78 7c 46 43 46 7c 78 00 1e bf e1 61 33 12 00 00     x|FCF|x....a3...
     587:	3a 7a 40 40 7a 7a 40 00 38 7c 56 57 5d 18 00 00     :z@@zz@.8|VW]...
     597:	02 23 75 55 55 7d 7b 42 21 75 54 54 7d 79 40 00     .#uUU}{B!uTT}y@.
     5a7:	20 75 57 56 7c 78 40 00 00 22 77 55 55 7f 7a 40      uWV|x@.."wUU.z@
     5b7:	1c be e2 62 36 14 00 00 02 3b 7d 55 55 5d 1b 02     ...b6....;}UU]..
     5c7:	39 7d 54 54 5d 19 00 00 38 7d 57 56 5c 18 00 00     9}TT]...8}WV\...
     5d7:	01 45 7c 7c 41 01 00 00 02 03 45 7d 7d 43 02 00     .E||A.....E}}C..
     5e7:	00 45 7f 7e 40 00 00 00 79 7d 26 26 7d 79 00 00     .E.~@...y}&&}y..
     5f7:	70 7a 2d 2d 7a 70 00 00 44 7c 7e 57 55 44 00 00     pz--zp..D|~WUD..
     607:	20 74 54 54 7c 7c 54 54 7c 7e 0b 09 7f 7f 49 00      tTT||TT|~....I.
     617:	32 7b 49 49 7b 32 00 00 32 7a 48 48 7a 32 00 00     2{II{2..2zHHz2..
     627:	30 79 4b 4a 78 30 00 00 3a 7b 41 41 7b 7a 40 00     0yKJx0..:{AA{z@.
     637:	38 79 43 42 78 78 40 00 ba ba a0 a0 fa 7a 00 00     8yCBxx@......z..
     647:	39 7d 44 44 44 7d 39 00 3d 7d 40 40 7d 3d 00 00     9}DDD}9.=}@@}=..
     657:	38 7c 64 54 4c 7c 38 00 68 7e 7f 49 43 66 20 00     8|dTL|8.h~.ICf .
     667:	5c 3e 73 49 67 3e 1d 00 44 6c 38 38 6c 44 00 00     \>sIg>..Dl88lD..
     677:	40 c8 88 fe 7f 09 0b 02 20 74 56 57 7d 78 40 00     @....... tVW}x@.
     687:	00 44 7e 7f 41 00 00 00 30 78 48 4a 7b 31 00 00     .D~.A...0xHJ{1..
     697:	38 78 40 42 7b 79 40 00 7a 7b 09 0b 7a 73 01 00     8x@B{y@.z{..zs..
     6a7:	7a 7b 19 33 7a 7b 01 00 00 26 2f 29 2f 2f 28 00     z{.3z{...&/)//(.
     6b7:	00 26 2f 29 29 2f 26 00 30 78 4d 45 60 20 00 00     .&/))/&.0xME` ..
     6c7:	1c 22 7d 4b 5b 65 22 1c 08 08 08 08 38 38 00 00     ."}K[e".....88..
     6d7:	61 3f 1f cc ee ab b9 90 61 3f 1f 4c 66 73 d9 f8     a?......a?.Lfs..
     6e7:	00 00 60 fa fa 60 00 00 08 1c 36 22 08 1c 36 22     ..`..`....6"..6"
     6f7:	22 36 1c 08 22 36 1c 08 aa 00 55 00 aa 00 55 00     "6.."6....U...U.
     707:	aa 55 aa 55 aa 55 aa 55 55 ff aa ff 55 ff aa ff     .U.U.U.UU...U...
     717:	00 00 00 ff ff 00 00 00 10 10 10 ff ff 00 00 00     ................
     727:	70 78 2c 2e 7b 71 00 00 72 79 2d 2d 79 72 00 00     px,.{q..ry--yr..
     737:	71 7b 2e 2c 78 70 00 00 1c 22 5d 55 55 41 22 1c     q{.,xp..."]UUA".
     747:	14 14 f7 f7 00 ff ff 00 00 00 ff ff 00 ff ff 00     ................
     757:	14 14 f4 f4 04 fc fc 00 14 14 17 17 10 1f 1f 00     ................
     767:	18 3c 24 e7 e7 24 24 00 2b 2f fc fc 2f 2b 00 00     .<$..$$.+/../+..
     777:	10 10 10 f0 f0 00 00 00 00 00 00 1f 1f 10 10 10     ................
     787:	10 10 10 1f 1f 10 10 10 10 10 10 f0 f0 10 10 10     ................
     797:	00 00 00 ff ff 10 10 10 10 10 10 10 10 10 10 10     ................
     7a7:	10 10 10 ff ff 10 10 10 22 77 55 57 7e 7b 41 00     ........"wUW~{A.
     7b7:	72 7b 2d 2f 7a 73 01 00 00 00 1f 1f 10 17 17 14     r{-/zs..........
     7c7:	00 00 fc fc 04 f4 f4 14 14 14 17 17 10 17 17 14     ................
     7d7:	14 14 f4 f4 04 f4 f4 14 00 00 ff ff 00 f7 f7 14     ................
     7e7:	14 14 14 14 14 14 14 14 14 14 f7 f7 00 f7 f7 14     ................
     7f7:	66 3c 3c 24 3c 3c 66 00 05 27 72 57 7d 38 00 00     f<<$<<f..'rW}8..
     807:	49 7f 7f 49 63 7f 1c 00 46 7d 7d 55 55 46 00 00     I..Ic...F}}UUF..
     817:	45 7d 7c 54 55 45 00 00 44 7d 7f 56 54 44 00 00     E}|TUE..D}.VTD..
     827:	0a 0e 08 00 00 00 00 00 00 44 7e 7f 45 00 00 00     .........D~.E...
     837:	02 45 7d 7d 45 02 00 00 01 45 7c 7c 45 01 00 00     .E}}E....E||E...
     847:	10 10 10 1f 1f 00 00 00 00 00 00 f0 f0 10 10 10     ................
     857:	ff ff ff ff ff ff ff ff f0 f0 f0 f0 f0 f0 f0 f0     ................
     867:	00 00 00 77 77 00 00 00 00 45 7f 7e 44 00 00 00     ...ww....E.~D...
     877:	0f 0f 0f 0f 0f 0f 0f 0f 38 7c 46 47 45 7c 38 00     ........8|FGE|8.
     887:	fc fe 2a 2a 3e 14 00 00 3a 7d 45 45 45 7d 3a 00     ..**>...:}EEE}:.
     897:	38 7c 45 47 46 7c 38 00 32 7b 49 4b 7a 33 01 00     8|EGF|8.2{IKz3..
     8a7:	3a 7f 45 47 46 7f 39 00 80 fe 7e 20 20 3e 1e 00     :.EGF.9...~  >..
     8b7:	42 7e 7e 54 1c 08 00 00 41 7f 7f 55 14 1c 08 00     B~~T....A..U....
     8c7:	3c 7c 42 43 7d 3c 00 00 3a 79 41 41 79 3a 00 00     <|BC}<..:yAAy:..
     8d7:	3c 7d 43 42 7c 3c 00 00 b8 b8 a2 a3 f9 78 00 00     <}CB|<.......x..
     8e7:	0c 5c 72 73 5d 0c 00 00 02 02 02 02 02 02 00 00     .\rs]...........
     8f7:	00 00 02 03 01 00 00 00 10 10 10 10 10 10 00 00     ................
     907:	44 44 5f 5f 44 44 00 00 28 28 28 28 28 28 00 00     DD__DD..((((((..
     917:	71 35 1f 4c 66 73 d9 f8 06 0f 09 7f 7f 01 7f 7f     q5.Lfs..........
     927:	da bf a5 a5 fd 59 03 02 08 08 6b 6b 08 08 00 00     .....Y....kk....
     937:	00 80 c0 40 00 00 00 00 00 06 0f 09 0f 06 00 00     ...@............
     947:	02 02 00 00 02 02 00 00 00 00 00 10 10 00 00 00     ................
     957:	00 12 13 1f 1f 10 10 00 00 11 15 15 1f 1f 0a 00     ................
     967:	00 19 1d 15 17 12 00 00 00 00 3c 3c 3c 3c 00 00     ..........<<<<..
	...

0000097f <__c.2478>:
     97f:	45 72 72 6f 72 00                                   Error.

00000985 <__c.2476>:
     985:	45 72 72 6f 72 00                                   Error.

0000098b <__c.2474>:
     98b:	48 00                                               H.

0000098d <__c.2472>:
     98d:	25 73 00                                            %s.

00000990 <__c.2470>:
     990:	48 3a 20 00                                         H: .

00000994 <__c.2468>:
     994:	43 00                                               C.

00000996 <__c.2466>:
     996:	25 73 00                                            %s.

00000999 <__c.2464>:
     999:	54 3a 20 00                                         T: .

0000099d <__c.2462>:
     99d:	43 00                                               C.

0000099f <__c.2460>:
     99f:	25 73 00                                            %s.

000009a2 <__c.2458>:
     9a2:	54 32 3a 20 00                                      T2: .

000009a7 <__c.2456>:
     9a7:	43 00                                               C.

000009a9 <__c.2454>:
     9a9:	25 73 00                                            %s.

000009ac <__c.2452>:
     9ac:	54 31 3a 20 00                                      T1: .

000009b1 <__c.2450>:
     9b1:	50 6c 61 6e 74 48 75 74 20 56 25 69 2e 25 69 2e     PlantHut V%i.%i.
     9c1:	25 69 00                                            %i.

000009c4 <__ctors_end>:
     9c4:	11 24       	eor	r1, r1
     9c6:	1f be       	out	0x3f, r1	; 63
     9c8:	cf ef       	ldi	r28, 0xFF	; 255
     9ca:	d8 e0       	ldi	r29, 0x08	; 8
     9cc:	de bf       	out	0x3e, r29	; 62
     9ce:	cd bf       	out	0x3d, r28	; 61

000009d0 <__do_clear_bss>:
     9d0:	21 e0       	ldi	r18, 0x01	; 1
     9d2:	a0 e0       	ldi	r26, 0x00	; 0
     9d4:	b1 e0       	ldi	r27, 0x01	; 1
     9d6:	01 c0       	rjmp	.+2      	; 0x9da <.do_clear_bss_start>

000009d8 <.do_clear_bss_loop>:
     9d8:	1d 92       	st	X+, r1

000009da <.do_clear_bss_start>:
     9da:	ab 30       	cpi	r26, 0x0B	; 11
     9dc:	b2 07       	cpc	r27, r18
     9de:	e1 f7       	brne	.-8      	; 0x9d8 <.do_clear_bss_loop>
     9e0:	0e 94 20 09 	call	0x1240	; 0x1240 <main>
     9e4:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <_exit>

000009e8 <__bad_interrupt>:
     9e8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000009ec <i2c_init>:
	#include <lib/driver/bus/i2c.h>


	//***************************************************************************************
	void i2c_init(void){
		I2C_PORT |= (1 << SDA_PIN | 1 << SCL_PIN);			//Port Pullup
     9ec:	88 b1       	in	r24, 0x08	; 8
     9ee:	80 63       	ori	r24, 0x30	; 48
     9f0:	88 b9       	out	0x08, r24	; 8
		TWCR = 0;
     9f2:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		TWSR = 0;
     9f6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
		TWBR = ((F_CPU/SCL_CLOCK)-16)/2;
     9fa:	89 ef       	ldi	r24, 0xF9	; 249
     9fc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a00:	83 ed       	ldi	r24, 0xD3	; 211
     a02:	90 e3       	ldi	r25, 0x30	; 48
     a04:	01 97       	sbiw	r24, 0x01	; 1
     a06:	f1 f7       	brne	.-4      	; 0xa04 <i2c_init+0x18>
     a08:	00 c0       	rjmp	.+0      	; 0xa0a <i2c_init+0x1e>
     a0a:	00 00       	nop
     a0c:	08 95       	ret

00000a0e <i2c_start>:
	}

	//***************************************************************************************
	uint8_t i2c_start (void){
		uint8_t timeout = 0;
		TWCR = (1 << TWINT | 1 << TWSTA | 1 << TWEN);
     a0e:	84 ea       	ldi	r24, 0xA4	; 164
     a10:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		_delay_ms(50);
	}

	//***************************************************************************************
	uint8_t i2c_start (void){
		uint8_t timeout = 0;
     a14:	80 e0       	ldi	r24, 0x00	; 0
		TWCR = (1 << TWINT | 1 << TWSTA | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
     a16:	05 c0       	rjmp	.+10     	; 0xa22 <i2c_start+0x14>
			if((timeout++) > 100) return 1;
     a18:	91 e0       	ldi	r25, 0x01	; 1
     a1a:	98 0f       	add	r25, r24
     a1c:	85 36       	cpi	r24, 0x65	; 101
     a1e:	c0 f4       	brcc	.+48     	; 0xa50 <i2c_start+0x42>
     a20:	89 2f       	mov	r24, r25

	//***************************************************************************************
	uint8_t i2c_start (void){
		uint8_t timeout = 0;
		TWCR = (1 << TWINT | 1 << TWSTA | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
     a22:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a26:	99 23       	and	r25, r25
     a28:	bc f7       	brge	.-18     	; 0xa18 <i2c_start+0xa>
			if((timeout++) > 100) return 1;
		}
		TWDR = OLED_I2C_ADDR;
     a2a:	88 e7       	ldi	r24, 0x78	; 120
     a2c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		TWCR = (1 << TWINT | 1 << TWEN);
     a30:	84 e8       	ldi	r24, 0x84	; 132
     a32:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		timeout = 0;
     a36:	80 e0       	ldi	r24, 0x00	; 0
		while(!(TWCR & (1<<TWINT))){
     a38:	05 c0       	rjmp	.+10     	; 0xa44 <i2c_start+0x36>
			if((timeout++) > 100) return 1;
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	98 0f       	add	r25, r24
     a3e:	85 36       	cpi	r24, 0x65	; 101
     a40:	48 f4       	brcc	.+18     	; 0xa54 <i2c_start+0x46>
     a42:	89 2f       	mov	r24, r25
			if((timeout++) > 100) return 1;
		}
		TWDR = OLED_I2C_ADDR;
		TWCR = (1 << TWINT | 1 << TWEN);
		timeout = 0;
		while(!(TWCR & (1<<TWINT))){
     a44:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a48:	99 23       	and	r25, r25
     a4a:	bc f7       	brge	.-18     	; 0xa3a <i2c_start+0x2c>
			if((timeout++) > 100) return 1;
		}
		return 0;
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	08 95       	ret
	//***************************************************************************************
	uint8_t i2c_start (void){
		uint8_t timeout = 0;
		TWCR = (1 << TWINT | 1 << TWSTA | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
			if((timeout++) > 100) return 1;
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	08 95       	ret
		}
		TWDR = OLED_I2C_ADDR;
		TWCR = (1 << TWINT | 1 << TWEN);
		timeout = 0;
		while(!(TWCR & (1<<TWINT))){
			if((timeout++) > 100) return 1;
     a54:	81 e0       	ldi	r24, 0x01	; 1
		}
		return 0;
	}
     a56:	08 95       	ret

00000a58 <i2c_byte>:

	//***************************************************************************************
	uint8_t i2c_byte (uint8_t byte){  
		uint8_t timeout = 0;
		TWDR = byte;
     a58:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
		TWCR = (1 << TWINT | 1 << TWEN);
     a5c:	84 e8       	ldi	r24, 0x84	; 132
     a5e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
		return 0;
	}

	//***************************************************************************************
	uint8_t i2c_byte (uint8_t byte){  
		uint8_t timeout = 0;
     a62:	80 e0       	ldi	r24, 0x00	; 0
		TWDR = byte;
		TWCR = (1 << TWINT | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
     a64:	05 c0       	rjmp	.+10     	; 0xa70 <i2c_byte+0x18>
			if((timeout++) > 100) return 1;
     a66:	91 e0       	ldi	r25, 0x01	; 1
     a68:	98 0f       	add	r25, r24
     a6a:	85 36       	cpi	r24, 0x65	; 101
     a6c:	38 f4       	brcc	.+14     	; 0xa7c <i2c_byte+0x24>
     a6e:	89 2f       	mov	r24, r25
	//***************************************************************************************
	uint8_t i2c_byte (uint8_t byte){  
		uint8_t timeout = 0;
		TWDR = byte;
		TWCR = (1 << TWINT | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
     a70:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     a74:	99 23       	and	r25, r25
     a76:	bc f7       	brge	.-18     	; 0xa66 <i2c_byte+0xe>
			if((timeout++) > 100) return 1;
		}
		return 0;
     a78:	80 e0       	ldi	r24, 0x00	; 0
     a7a:	08 95       	ret
	uint8_t i2c_byte (uint8_t byte){  
		uint8_t timeout = 0;
		TWDR = byte;
		TWCR = (1 << TWINT | 1 << TWEN);
		while(!(TWCR & (1<<TWINT))){
			if((timeout++) > 100) return 1;
     a7c:	81 e0       	ldi	r24, 0x01	; 1
		}
		return 0;
	}
     a7e:	08 95       	ret

00000a80 <i2c_stop>:

	//***************************************************************************************
	void i2c_stop (void){
		TWCR = (1 << TWINT | 1 << TWSTO | 1 << TWEN);
     a80:	ec eb       	ldi	r30, 0xBC	; 188
     a82:	f0 e0       	ldi	r31, 0x00	; 0
     a84:	84 e9       	ldi	r24, 0x94	; 148
     a86:	80 83       	st	Z, r24
		TWCR = 0;
     a88:	10 82       	st	Z, r1
     a8a:	08 95       	ret

00000a8c <oled_gotoxy>:
    i2c_stop();
	oled_gotoxy(0,0);
}

//***************************************************************************************
void oled_gotoxy (uint8_t x, uint8_t y){
     a8c:	cf 93       	push	r28
     a8e:	df 93       	push	r29
     a90:	c8 2f       	mov	r28, r24
     a92:	d6 2f       	mov	r29, r22
	oled_x = x;
     a94:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
	oled_y = y;
     a98:	60 93 01 01 	sts	0x0101, r22	; 0x800101 <oled_y>
    i2c_start();		
     a9c:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
    i2c_byte(COMMAND);
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
    i2c_byte(SET_PAGE_START|y);
     aa6:	8d 2f       	mov	r24, r29
     aa8:	80 6b       	ori	r24, 0xB0	; 176
     aaa:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
	i2c_byte(SET_COLUMN_ADDRESS);
     aae:	81 e2       	ldi	r24, 0x21	; 33
     ab0:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
    i2c_byte(x * 8);
     ab4:	8c 2f       	mov	r24, r28
     ab6:	88 0f       	add	r24, r24
     ab8:	88 0f       	add	r24, r24
     aba:	88 0f       	add	r24, r24
     abc:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
	i2c_byte(SET_DISPLAY_START_LINE|0x3F);
     ac0:	8f e7       	ldi	r24, 0x7F	; 127
     ac2:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
    i2c_stop();			
     ac6:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
}
     aca:	df 91       	pop	r29
     acc:	cf 91       	pop	r28
     ace:	08 95       	ret

00000ad0 <oled_clear_screen>:
	i2c_stop();
    oled_clear_screen();
}

//***************************************************************************************
void oled_clear_screen (void){
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
	oled_gotoxy(0,0);
     ad4:	60 e0       	ldi	r22, 0x00	; 0
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
	i2c_start();
     adc:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
    i2c_byte(DATA);
     ae0:	80 e4       	ldi	r24, 0x40	; 64
     ae2:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
    for (uint16_t i = 0; i < 128<<4 ; i++) {	// 128 * (64 / Byte) 
     ae6:	c0 e0       	ldi	r28, 0x00	; 0
     ae8:	d0 e0       	ldi	r29, 0x00	; 0
     aea:	04 c0       	rjmp	.+8      	; 0xaf4 <oled_clear_screen+0x24>
        i2c_byte(0);	
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
//***************************************************************************************
void oled_clear_screen (void){
	oled_gotoxy(0,0);
	i2c_start();
    i2c_byte(DATA);
    for (uint16_t i = 0; i < 128<<4 ; i++) {	// 128 * (64 / Byte) 
     af2:	21 96       	adiw	r28, 0x01	; 1
     af4:	c1 15       	cp	r28, r1
     af6:	88 e0       	ldi	r24, 0x08	; 8
     af8:	d8 07       	cpc	r29, r24
     afa:	c0 f3       	brcs	.-16     	; 0xaec <oled_clear_screen+0x1c>
        i2c_byte(0);	
    }
    i2c_stop();
     afc:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
	oled_gotoxy(0,0);
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	80 e0       	ldi	r24, 0x00	; 0
     b04:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
}
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <oled_init>:




//***************************************************************************************
void oled_init (void){
     b0e:	cf 93       	push	r28
	i2c_start();
     b10:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
	i2c_byte(COMMAND);
     b14:	80 e0       	ldi	r24, 0x00	; 0
     b16:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
	for (uint8_t tmp = 0; tmp< sizeof(ssd1306_init_cmd); tmp++) {	
     b1a:	c0 e0       	ldi	r28, 0x00	; 0
     b1c:	08 c0       	rjmp	.+16     	; 0xb2e <oled_init+0x20>
		i2c_byte(pgm_read_byte(&ssd1306_init_cmd[tmp]));
     b1e:	ec 2f       	mov	r30, r28
     b20:	f0 e0       	ldi	r31, 0x00	; 0
     b22:	ee 59       	subi	r30, 0x9E	; 158
     b24:	fe 4f       	sbci	r31, 0xFE	; 254
     b26:	84 91       	lpm	r24, Z
     b28:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>

//***************************************************************************************
void oled_init (void){
	i2c_start();
	i2c_byte(COMMAND);
	for (uint8_t tmp = 0; tmp< sizeof(ssd1306_init_cmd); tmp++) {	
     b2c:	cf 5f       	subi	r28, 0xFF	; 255
     b2e:	cd 31       	cpi	r28, 0x1D	; 29
     b30:	b0 f3       	brcs	.-20     	; 0xb1e <oled_init+0x10>
		i2c_byte(pgm_read_byte(&ssd1306_init_cmd[tmp]));
	}
	i2c_stop();
     b32:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
    oled_clear_screen();
     b36:	0e 94 68 05 	call	0xad0	; 0xad0 <oled_clear_screen>
}
     b3a:	cf 91       	pop	r28
     b3c:	08 95       	ret

00000b3e <oled_font_size>:
    i2c_stop();			
}

//***************************************************************************************
void oled_font_size (uint8_t byte){
	font_size = byte;
     b3e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     b42:	08 95       	ret

00000b44 <oled_write_char>:
}

//***************************************************************************************
void oled_write_char (char c){
     b44:	df 92       	push	r13
     b46:	ef 92       	push	r14
     b48:	ff 92       	push	r15
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	08 2f       	mov	r16, r24
	if(font_size != 0){		
     b54:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     b58:	88 23       	and	r24, r24
     b5a:	09 f4       	brne	.+2      	; 0xb5e <oled_write_char+0x1a>
     b5c:	9b c0       	rjmp	.+310    	; 0xc94 <oled_write_char+0x150>
		uint8_t tmp = 0;
		oled_gotoxy(oled_x,oled_y);
     b5e:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
     b62:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
     b66:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		i2c_start();
     b6a:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
		i2c_byte(DATA);
     b6e:	80 e4       	ldi	r24, 0x40	; 64
     b70:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
     b74:	10 e0       	ldi	r17, 0x00	; 0
     b76:	35 c0       	rjmp	.+106    	; 0xbe2 <oled_write_char+0x9e>
			tmp = pgm_read_byte(&font[(unsigned char)c][count]);
     b78:	e0 2f       	mov	r30, r16
     b7a:	f0 e0       	ldi	r31, 0x00	; 0
     b7c:	ee 0f       	add	r30, r30
     b7e:	ff 1f       	adc	r31, r31
     b80:	ee 0f       	add	r30, r30
     b82:	ff 1f       	adc	r31, r31
     b84:	ee 0f       	add	r30, r30
     b86:	ff 1f       	adc	r31, r31
     b88:	e1 0f       	add	r30, r17
     b8a:	f1 1d       	adc	r31, r1
     b8c:	e1 58       	subi	r30, 0x81	; 129
     b8e:	fe 4f       	sbci	r31, 0xFE	; 254
     b90:	84 91       	lpm	r24, Z
			tmp = tmp & 0x0f;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
     b92:	80 fb       	bst	r24, 0
     b94:	ee 24       	eor	r14, r14
     b96:	e0 f8       	bld	r14, 0
     b98:	f1 2c       	mov	r15, r1
     b9a:	e8 2f       	mov	r30, r24
     b9c:	e2 70       	andi	r30, 0x02	; 2
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	ee 0f       	add	r30, r30
     ba2:	ff 1f       	adc	r31, r31
     ba4:	ee 0d       	add	r30, r14
     ba6:	ff 1d       	adc	r31, r15
     ba8:	28 2f       	mov	r18, r24
     baa:	24 70       	andi	r18, 0x04	; 4
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	22 0f       	add	r18, r18
     bb0:	33 1f       	adc	r19, r19
     bb2:	22 0f       	add	r18, r18
     bb4:	33 1f       	adc	r19, r19
     bb6:	e2 0f       	add	r30, r18
     bb8:	f3 1f       	adc	r31, r19
     bba:	88 70       	andi	r24, 0x08	; 8
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	88 0f       	add	r24, r24
     bc0:	99 1f       	adc	r25, r25
     bc2:	88 0f       	add	r24, r24
     bc4:	99 1f       	adc	r25, r25
     bc6:	88 0f       	add	r24, r24
     bc8:	99 1f       	adc	r25, r25
     bca:	e8 0f       	add	r30, r24
     bcc:	f9 1f       	adc	r31, r25
     bce:	de 2e       	mov	r13, r30
     bd0:	dd 0c       	add	r13, r13
     bd2:	de 0e       	add	r13, r30
			i2c_byte(tmp);
     bd4:	8d 2d       	mov	r24, r13
     bd6:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
			i2c_byte(tmp);
     bda:	8d 2d       	mov	r24, r13
     bdc:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
	if(font_size != 0){		
		uint8_t tmp = 0;
		oled_gotoxy(oled_x,oled_y);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
     be0:	1f 5f       	subi	r17, 0xFF	; 255
     be2:	18 30       	cpi	r17, 0x08	; 8
     be4:	48 f2       	brcs	.-110    	; 0xb78 <oled_write_char+0x34>
			tmp = tmp & 0x0f;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
			i2c_byte(tmp);
			i2c_byte(tmp);
		}
		i2c_stop();
     be6:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
		oled_gotoxy(oled_x,oled_y + 1);
     bea:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
     bee:	6f 5f       	subi	r22, 0xFF	; 255
     bf0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
     bf4:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		i2c_start();
     bf8:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
		i2c_byte(DATA);
     bfc:	80 e4       	ldi	r24, 0x40	; 64
     bfe:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
     c02:	10 e0       	ldi	r17, 0x00	; 0
     c04:	38 c0       	rjmp	.+112    	; 0xc76 <oled_write_char+0x132>
			tmp = pgm_read_byte(&font[(unsigned char)c][count]);
     c06:	e0 2f       	mov	r30, r16
     c08:	f0 e0       	ldi	r31, 0x00	; 0
     c0a:	ee 0f       	add	r30, r30
     c0c:	ff 1f       	adc	r31, r31
     c0e:	ee 0f       	add	r30, r30
     c10:	ff 1f       	adc	r31, r31
     c12:	ee 0f       	add	r30, r30
     c14:	ff 1f       	adc	r31, r31
     c16:	e1 0f       	add	r30, r17
     c18:	f1 1d       	adc	r31, r1
     c1a:	e1 58       	subi	r30, 0x81	; 129
     c1c:	fe 4f       	sbci	r31, 0xFE	; 254
     c1e:	24 91       	lpm	r18, Z
			tmp = (tmp & 0xf0)>>4;
     c20:	22 95       	swap	r18
     c22:	2f 70       	andi	r18, 0x0F	; 15
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
     c24:	82 2f       	mov	r24, r18
     c26:	81 70       	andi	r24, 0x01	; 1
     c28:	c8 2f       	mov	r28, r24
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	d8 2f       	mov	r29, r24
     c2e:	82 2f       	mov	r24, r18
     c30:	82 70       	andi	r24, 0x02	; 2
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	88 0f       	add	r24, r24
     c36:	99 1f       	adc	r25, r25
     c38:	8c 0f       	add	r24, r28
     c3a:	9d 1f       	adc	r25, r29
     c3c:	42 2f       	mov	r20, r18
     c3e:	44 70       	andi	r20, 0x04	; 4
     c40:	50 e0       	ldi	r21, 0x00	; 0
     c42:	44 0f       	add	r20, r20
     c44:	55 1f       	adc	r21, r21
     c46:	44 0f       	add	r20, r20
     c48:	55 1f       	adc	r21, r21
     c4a:	84 0f       	add	r24, r20
     c4c:	95 1f       	adc	r25, r21
     c4e:	28 70       	andi	r18, 0x08	; 8
     c50:	30 e0       	ldi	r19, 0x00	; 0
     c52:	22 0f       	add	r18, r18
     c54:	33 1f       	adc	r19, r19
     c56:	22 0f       	add	r18, r18
     c58:	33 1f       	adc	r19, r19
     c5a:	22 0f       	add	r18, r18
     c5c:	33 1f       	adc	r19, r19
     c5e:	82 0f       	add	r24, r18
     c60:	93 1f       	adc	r25, r19
     c62:	f8 2e       	mov	r15, r24
     c64:	ff 0c       	add	r15, r15
     c66:	f8 0e       	add	r15, r24
			i2c_byte(tmp);
     c68:	8f 2d       	mov	r24, r15
     c6a:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
			i2c_byte(tmp);
     c6e:	8f 2d       	mov	r24, r15
     c70:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
		}
		i2c_stop();
		oled_gotoxy(oled_x,oled_y + 1);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
     c74:	1f 5f       	subi	r17, 0xFF	; 255
     c76:	18 30       	cpi	r17, 0x08	; 8
     c78:	30 f2       	brcs	.-116    	; 0xc06 <oled_write_char+0xc2>
			tmp = (tmp & 0xf0)>>4;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
			i2c_byte(tmp);
			i2c_byte(tmp);
		}
		i2c_stop();
     c7a:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
		oled_x +=2;
     c7e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
     c82:	8e 5f       	subi	r24, 0xFE	; 254
     c84:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
		oled_y -=1;
     c88:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <oled_y>
     c8c:	81 50       	subi	r24, 0x01	; 1
     c8e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <oled_y>
     c92:	26 c0       	rjmp	.+76     	; 0xce0 <oled_write_char+0x19c>
	}else{
		oled_gotoxy(oled_x,oled_y);
     c94:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <oled_y>
     c98:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
     c9c:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		i2c_start();
     ca0:	0e 94 07 05 	call	0xa0e	; 0xa0e <i2c_start>
		i2c_byte(DATA);
     ca4:	80 e4       	ldi	r24, 0x40	; 64
     ca6:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
		for (uint8_t count = 0; count < 8; count++){
     caa:	c0 e0       	ldi	r28, 0x00	; 0
     cac:	10 c0       	rjmp	.+32     	; 0xcce <oled_write_char+0x18a>
			i2c_byte(pgm_read_byte(&font[(unsigned char)c][count]));
     cae:	e0 2f       	mov	r30, r16
     cb0:	f0 e0       	ldi	r31, 0x00	; 0
     cb2:	ee 0f       	add	r30, r30
     cb4:	ff 1f       	adc	r31, r31
     cb6:	ee 0f       	add	r30, r30
     cb8:	ff 1f       	adc	r31, r31
     cba:	ee 0f       	add	r30, r30
     cbc:	ff 1f       	adc	r31, r31
     cbe:	ec 0f       	add	r30, r28
     cc0:	f1 1d       	adc	r31, r1
     cc2:	e1 58       	subi	r30, 0x81	; 129
     cc4:	fe 4f       	sbci	r31, 0xFE	; 254
     cc6:	84 91       	lpm	r24, Z
     cc8:	0e 94 2c 05 	call	0xa58	; 0xa58 <i2c_byte>
		oled_y -=1;
	}else{
		oled_gotoxy(oled_x,oled_y);
		i2c_start();
		i2c_byte(DATA);
		for (uint8_t count = 0; count < 8; count++){
     ccc:	cf 5f       	subi	r28, 0xFF	; 255
     cce:	c8 30       	cpi	r28, 0x08	; 8
     cd0:	70 f3       	brcs	.-36     	; 0xcae <oled_write_char+0x16a>
			i2c_byte(pgm_read_byte(&font[(unsigned char)c][count]));
		}
		i2c_stop();
     cd2:	0e 94 40 05 	call	0xa80	; 0xa80 <i2c_stop>
		oled_x +=1;
     cd6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <oled_x>
     cda:	8f 5f       	subi	r24, 0xFF	; 255
     cdc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <oled_x>
	}
}
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	1f 91       	pop	r17
     ce6:	0f 91       	pop	r16
     ce8:	ff 90       	pop	r15
     cea:	ef 90       	pop	r14
     cec:	df 90       	pop	r13
     cee:	08 95       	ret

00000cf0 <oled_write_str>:

//***************************************************************************************
void oled_write_str (char* str){
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	ec 01       	movw	r28, r24
    while (*str) {
     cf6:	03 c0       	rjmp	.+6      	; 0xcfe <oled_write_str+0xe>
        oled_write_char(*str++);
     cf8:	21 96       	adiw	r28, 0x01	; 1
     cfa:	0e 94 a2 05 	call	0xb44	; 0xb44 <oled_write_char>
	}
}

//***************************************************************************************
void oled_write_str (char* str){
    while (*str) {
     cfe:	88 81       	ld	r24, Y
     d00:	81 11       	cpse	r24, r1
     d02:	fa cf       	rjmp	.-12     	; 0xcf8 <oled_write_str+0x8>
        oled_write_char(*str++);
    }
}
     d04:	df 91       	pop	r29
     d06:	cf 91       	pop	r28
     d08:	08 95       	ret

00000d0a <oled_write_P>:

//***************************************************************************************
void oled_write_P (const char *Buffer,...)
{
     d0a:	8f 92       	push	r8
     d0c:	9f 92       	push	r9
     d0e:	af 92       	push	r10
     d10:	bf 92       	push	r11
     d12:	df 92       	push	r13
     d14:	ef 92       	push	r14
     d16:	ff 92       	push	r15
     d18:	0f 93       	push	r16
     d1a:	1f 93       	push	r17
     d1c:	cf 93       	push	r28
     d1e:	df 93       	push	r29
     d20:	cd b7       	in	r28, 0x3d	; 61
     d22:	de b7       	in	r29, 0x3e	; 62
     d24:	64 97       	sbiw	r28, 0x14	; 20
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	fe 01       	movw	r30, r28
     d32:	b2 96       	adiw	r30, 0x22	; 34
     d34:	01 91       	ld	r16, Z+
     d36:	11 91       	ld	r17, Z+
	va_list ap;
	va_start (ap, Buffer);	
     d38:	5f 01       	movw	r10, r30
	
	int format_flag;
	char str_buffer[10];
	char str_null_buffer[10];
	char move = 0;
     d3a:	d1 2c       	mov	r13, r1
	char by;
	char *ptr;
		
	//Ausgabe der Zeichen
    for(;;){
		by = pgm_read_byte(Buffer++);
     d3c:	78 01       	movw	r14, r16
     d3e:	8f ef       	ldi	r24, 0xFF	; 255
     d40:	e8 1a       	sub	r14, r24
     d42:	f8 0a       	sbc	r15, r24
     d44:	f8 01       	movw	r30, r16
     d46:	84 91       	lpm	r24, Z
		if(by==0) break; // end of format string
     d48:	88 23       	and	r24, r24
     d4a:	09 f4       	brne	.+2      	; 0xd4e <oled_write_P+0x44>
     d4c:	a5 c0       	rjmp	.+330    	; 0xe98 <oled_write_P+0x18e>
            
		if (by == '%'){
     d4e:	85 32       	cpi	r24, 0x25	; 37
     d50:	09 f0       	breq	.+2      	; 0xd54 <oled_write_P+0x4a>
     d52:	9e c0       	rjmp	.+316    	; 0xe90 <oled_write_P+0x186>
            by = pgm_read_byte(Buffer++);
     d54:	48 01       	movw	r8, r16
     d56:	f2 e0       	ldi	r31, 0x02	; 2
     d58:	8f 0e       	add	r8, r31
     d5a:	91 1c       	adc	r9, r1
     d5c:	f7 01       	movw	r30, r14
     d5e:	84 91       	lpm	r24, Z
			if (isdigit(by)>0){                   
     d60:	28 2f       	mov	r18, r24
     d62:	30 e0       	ldi	r19, 0x00	; 0
     d64:	20 53       	subi	r18, 0x30	; 48
     d66:	31 09       	sbc	r19, r1
     d68:	2a 30       	cpi	r18, 0x0A	; 10
     d6a:	31 05       	cpc	r19, r1
     d6c:	60 f4       	brcc	.+24     	; 0xd86 <oled_write_P+0x7c>
 				str_null_buffer[0] = by;
     d6e:	8b 87       	std	Y+11, r24	; 0x0b
				str_null_buffer[1] = '\0';
     d70:	1c 86       	std	Y+12, r1	; 0x0c
				move = atoi(str_null_buffer);
     d72:	ce 01       	movw	r24, r28
     d74:	0b 96       	adiw	r24, 0x0b	; 11
     d76:	0e 94 9a 0b 	call	0x1734	; 0x1734 <atoi>
     d7a:	d8 2e       	mov	r13, r24
                by = pgm_read_byte(Buffer++);
     d7c:	0d 5f       	subi	r16, 0xFD	; 253
     d7e:	1f 4f       	sbci	r17, 0xFF	; 255
     d80:	f4 01       	movw	r30, r8
     d82:	84 91       	lpm	r24, Z
     d84:	01 c0       	rjmp	.+2      	; 0xd88 <oled_write_P+0x7e>
    for(;;){
		by = pgm_read_byte(Buffer++);
		if(by==0) break; // end of format string
            
		if (by == '%'){
            by = pgm_read_byte(Buffer++);
     d86:	84 01       	movw	r16, r8
				str_null_buffer[1] = '\0';
				move = atoi(str_null_buffer);
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
     d88:	89 36       	cpi	r24, 0x69	; 105
     d8a:	81 f1       	breq	.+96     	; 0xdec <oled_write_P+0xe2>
     d8c:	28 f4       	brcc	.+10     	; 0xd98 <oled_write_P+0x8e>
     d8e:	82 36       	cpi	r24, 0x62	; 98
     d90:	51 f0       	breq	.+20     	; 0xda6 <oled_write_P+0x9c>
     d92:	83 36       	cpi	r24, 0x63	; 99
     d94:	e9 f0       	breq	.+58     	; 0xdd0 <oled_write_P+0xc6>
     d96:	d2 cf       	rjmp	.-92     	; 0xd3c <oled_write_P+0x32>
     d98:	83 37       	cpi	r24, 0x73	; 115
     d9a:	39 f0       	breq	.+14     	; 0xdaa <oled_write_P+0xa0>
     d9c:	88 37       	cpi	r24, 0x78	; 120
     d9e:	21 f1       	breq	.+72     	; 0xde8 <oled_write_P+0xde>
     da0:	8f 36       	cpi	r24, 0x6F	; 111
     da2:	61 f6       	brne	.-104    	; 0xd3c <oled_write_P+0x32>
     da4:	1f c0       	rjmp	.+62     	; 0xde4 <oled_write_P+0xda>
                case 's':
                    ptr = va_arg(ap,char *);
                    while(*ptr) { oled_write_char(*ptr++); }
                    break;
				case 'b':
					Base = 2;
     da6:	42 e0       	ldi	r20, 0x02	; 2
     da8:	22 c0       	rjmp	.+68     	; 0xdee <oled_write_P+0xe4>
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
                case 's':
                    ptr = va_arg(ap,char *);
     daa:	45 01       	movw	r8, r10
     dac:	f2 e0       	ldi	r31, 0x02	; 2
     dae:	8f 0e       	add	r8, r31
     db0:	91 1c       	adc	r9, r1
     db2:	f5 01       	movw	r30, r10
     db4:	e0 80       	ld	r14, Z
     db6:	f1 80       	ldd	r15, Z+1	; 0x01
                    while(*ptr) { oled_write_char(*ptr++); }
     db8:	05 c0       	rjmp	.+10     	; 0xdc4 <oled_write_P+0xba>
     dba:	ff ef       	ldi	r31, 0xFF	; 255
     dbc:	ef 1a       	sub	r14, r31
     dbe:	ff 0a       	sbc	r15, r31
     dc0:	0e 94 a2 05 	call	0xb44	; 0xb44 <oled_write_char>
     dc4:	f7 01       	movw	r30, r14
     dc6:	80 81       	ld	r24, Z
     dc8:	81 11       	cpse	r24, r1
     dca:	f7 cf       	rjmp	.-18     	; 0xdba <oled_write_P+0xb0>
                by = pgm_read_byte(Buffer++);
				}

			switch (by){
                case 's':
                    ptr = va_arg(ap,char *);
     dcc:	54 01       	movw	r10, r8
     dce:	b6 cf       	rjmp	.-148    	; 0xd3c <oled_write_P+0x32>
				case 'b':
					Base = 2;
					goto ConversionLoop;
				case 'c':
					//Int to char
					format_flag = va_arg(ap,int);
     dd0:	75 01       	movw	r14, r10
     dd2:	f2 e0       	ldi	r31, 0x02	; 2
     dd4:	ef 0e       	add	r14, r31
     dd6:	f1 1c       	adc	r15, r1
					oled_write_char (format_flag++);
     dd8:	f5 01       	movw	r30, r10
     dda:	80 81       	ld	r24, Z
     ddc:	0e 94 a2 05 	call	0xb44	; 0xb44 <oled_write_char>
				case 'b':
					Base = 2;
					goto ConversionLoop;
				case 'c':
					//Int to char
					format_flag = va_arg(ap,int);
     de0:	57 01       	movw	r10, r14
					oled_write_char (format_flag++);
					break;
     de2:	ac cf       	rjmp	.-168    	; 0xd3c <oled_write_P+0x32>
				case 'i':
					Base = 10;
					goto ConversionLoop;
				case 'o':
					Base = 8;
     de4:	48 e0       	ldi	r20, 0x08	; 8
					goto ConversionLoop;
     de6:	03 c0       	rjmp	.+6      	; 0xdee <oled_write_P+0xe4>
				case 'x':
					Base = 16;
     de8:	40 e1       	ldi	r20, 0x10	; 16
     dea:	01 c0       	rjmp	.+2      	; 0xdee <oled_write_P+0xe4>
					//Int to char
					format_flag = va_arg(ap,int);
					oled_write_char (format_flag++);
					break;
				case 'i':
					Base = 10;
     dec:	4a e0       	ldi	r20, 0x0A	; 10
				case 'x':
					Base = 16;
					//****************************
					ConversionLoop:
					//****************************
					itoa(va_arg(ap,int),str_buffer,Base);
     dee:	50 e0       	ldi	r21, 0x00	; 0
     df0:	75 01       	movw	r14, r10
     df2:	f2 e0       	ldi	r31, 0x02	; 2
     df4:	ef 0e       	add	r14, r31
     df6:	f1 1c       	adc	r15, r1
extern __inline__ __ATTR_GNU_INLINE__
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
	extern char *__itoa (int, char *, int);
	return __itoa (__val, __s, __radix);
     df8:	be 01       	movw	r22, r28
     dfa:	6f 5f       	subi	r22, 0xFF	; 255
     dfc:	7f 4f       	sbci	r23, 0xFF	; 255
     dfe:	f5 01       	movw	r30, r10
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	0e 94 ca 0b 	call	0x1794	; 0x1794 <itoa>
					int b=0;
     e08:	80 e0       	ldi	r24, 0x00	; 0
     e0a:	90 e0       	ldi	r25, 0x00	; 0
					while (str_buffer[b++] != 0){};
     e0c:	01 c0       	rjmp	.+2      	; 0xe10 <oled_write_P+0x106>
     e0e:	ca 01       	movw	r24, r20
     e10:	ac 01       	movw	r20, r24
     e12:	4f 5f       	subi	r20, 0xFF	; 255
     e14:	5f 4f       	sbci	r21, 0xFF	; 255
     e16:	e1 e0       	ldi	r30, 0x01	; 1
     e18:	f0 e0       	ldi	r31, 0x00	; 0
     e1a:	ec 0f       	add	r30, r28
     e1c:	fd 1f       	adc	r31, r29
     e1e:	e8 0f       	add	r30, r24
     e20:	f9 1f       	adc	r31, r25
     e22:	20 81       	ld	r18, Z
     e24:	21 11       	cpse	r18, r1
     e26:	f3 cf       	rjmp	.-26     	; 0xe0e <oled_write_P+0x104>
					b--;
					if (b<move){
     e28:	2d 2d       	mov	r18, r13
     e2a:	30 e0       	ldi	r19, 0x00	; 0
     e2c:	82 17       	cp	r24, r18
     e2e:	93 07       	cpc	r25, r19
     e30:	44 f5       	brge	.+80     	; 0xe82 <oled_write_P+0x178>
						move -=b;
     e32:	d8 1a       	sub	r13, r24
						for (tmp = 0;tmp<move;tmp++){
     e34:	20 e0       	ldi	r18, 0x00	; 0
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	0a c0       	rjmp	.+20     	; 0xe4e <oled_write_P+0x144>
							str_null_buffer[tmp] = '0';
     e3a:	eb e0       	ldi	r30, 0x0B	; 11
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	ec 0f       	add	r30, r28
     e40:	fd 1f       	adc	r31, r29
     e42:	e2 0f       	add	r30, r18
     e44:	f3 1f       	adc	r31, r19
     e46:	80 e3       	ldi	r24, 0x30	; 48
     e48:	80 83       	st	Z, r24
					int b=0;
					while (str_buffer[b++] != 0){};
					b--;
					if (b<move){
						move -=b;
						for (tmp = 0;tmp<move;tmp++){
     e4a:	2f 5f       	subi	r18, 0xFF	; 255
     e4c:	3f 4f       	sbci	r19, 0xFF	; 255
     e4e:	8d 2d       	mov	r24, r13
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	28 17       	cp	r18, r24
     e54:	39 07       	cpc	r19, r25
     e56:	8c f3       	brlt	.-30     	; 0xe3a <oled_write_P+0x130>
							str_null_buffer[tmp] = '0';
							}
						//tmp ++;
						str_null_buffer[tmp] = '\0';
     e58:	eb e0       	ldi	r30, 0x0B	; 11
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
     e5c:	ec 0f       	add	r30, r28
     e5e:	fd 1f       	adc	r31, r29
     e60:	e2 0f       	add	r30, r18
     e62:	f3 1f       	adc	r31, r19
     e64:	10 82       	st	Z, r1
						strcat(str_null_buffer,str_buffer);
     e66:	be 01       	movw	r22, r28
     e68:	6f 5f       	subi	r22, 0xFF	; 255
     e6a:	7f 4f       	sbci	r23, 0xFF	; 255
     e6c:	ce 01       	movw	r24, r28
     e6e:	0b 96       	adiw	r24, 0x0b	; 11
     e70:	0e 94 b8 0b 	call	0x1770	; 0x1770 <strcat>
						strcpy(str_buffer,str_null_buffer);
     e74:	be 01       	movw	r22, r28
     e76:	65 5f       	subi	r22, 0xF5	; 245
     e78:	7f 4f       	sbci	r23, 0xFF	; 255
     e7a:	ce 01       	movw	r24, r28
     e7c:	01 96       	adiw	r24, 0x01	; 1
     e7e:	0e 94 c3 0b 	call	0x1786	; 0x1786 <strcpy>
						}
					oled_write_str (str_buffer);
     e82:	ce 01       	movw	r24, r28
     e84:	01 96       	adiw	r24, 0x01	; 1
     e86:	0e 94 78 06 	call	0xcf0	; 0xcf0 <oled_write_str>
				case 'x':
					Base = 16;
					//****************************
					ConversionLoop:
					//****************************
					itoa(va_arg(ap,int),str_buffer,Base);
     e8a:	57 01       	movw	r10, r14
						str_null_buffer[tmp] = '\0';
						strcat(str_null_buffer,str_buffer);
						strcpy(str_buffer,str_null_buffer);
						}
					oled_write_str (str_buffer);
					move =0;
     e8c:	d1 2c       	mov	r13, r1
					break;
     e8e:	56 cf       	rjmp	.-340    	; 0xd3c <oled_write_P+0x32>
				}
		}else{
			oled_write_char (by);	
     e90:	0e 94 a2 05 	call	0xb44	; 0xb44 <oled_write_char>
	char by;
	char *ptr;
		
	//Ausgabe der Zeichen
    for(;;){
		by = pgm_read_byte(Buffer++);
     e94:	87 01       	movw	r16, r14
     e96:	52 cf       	rjmp	.-348    	; 0xd3c <oled_write_P+0x32>
		}else{
			oled_write_char (by);	
		}
	}
	va_end(ap);
}
     e98:	64 96       	adiw	r28, 0x14	; 20
     e9a:	0f b6       	in	r0, 0x3f	; 63
     e9c:	f8 94       	cli
     e9e:	de bf       	out	0x3e, r29	; 62
     ea0:	0f be       	out	0x3f, r0	; 63
     ea2:	cd bf       	out	0x3d, r28	; 61
     ea4:	df 91       	pop	r29
     ea6:	cf 91       	pop	r28
     ea8:	1f 91       	pop	r17
     eaa:	0f 91       	pop	r16
     eac:	ff 90       	pop	r15
     eae:	ef 90       	pop	r14
     eb0:	df 90       	pop	r13
     eb2:	bf 90       	pop	r11
     eb4:	af 90       	pop	r10
     eb6:	9f 90       	pop	r9
     eb8:	8f 90       	pop	r8
     eba:	08 95       	ret

00000ebc <dht_getdata>:
#elif DHT_FLOAT == 0
int8_t dht_gethumidity(int8_t *humidity) {
	int8_t temperature = 0;
#endif
	return dht_getdata(&temperature, humidity);
}
     ebc:	cf 92       	push	r12
     ebe:	df 92       	push	r13
     ec0:	ef 92       	push	r14
     ec2:	ff 92       	push	r15
     ec4:	0f 93       	push	r16
     ec6:	1f 93       	push	r17
     ec8:	cf 93       	push	r28
     eca:	df 93       	push	r29
     ecc:	00 d0       	rcall	.+0      	; 0xece <dht_getdata+0x12>
     ece:	00 d0       	rcall	.+0      	; 0xed0 <dht_getdata+0x14>
     ed0:	1f 92       	push	r1
     ed2:	cd b7       	in	r28, 0x3d	; 61
     ed4:	de b7       	in	r29, 0x3e	; 62
     ed6:	ac 01       	movw	r20, r24
     ed8:	fe 01       	movw	r30, r28
     eda:	31 96       	adiw	r30, 0x01	; 1
     edc:	85 e0       	ldi	r24, 0x05	; 5
     ede:	df 01       	movw	r26, r30
     ee0:	1d 92       	st	X+, r1
     ee2:	8a 95       	dec	r24
     ee4:	e9 f7       	brne	.-6      	; 0xee0 <dht_getdata+0x24>
     ee6:	84 b1       	in	r24, 0x04	; 4
     ee8:	81 60       	ori	r24, 0x01	; 1
     eea:	84 b9       	out	0x04, r24	; 4
     eec:	95 b1       	in	r25, 0x05	; 5
     eee:	91 60       	ori	r25, 0x01	; 1
     ef0:	95 b9       	out	0x05, r25	; 5
     ef2:	e7 ea       	ldi	r30, 0xA7	; 167
     ef4:	f1 e6       	ldi	r31, 0x61	; 97
     ef6:	31 97       	sbiw	r30, 0x01	; 1
     ef8:	f1 f7       	brne	.-4      	; 0xef6 <dht_getdata+0x3a>
     efa:	00 c0       	rjmp	.+0      	; 0xefc <dht_getdata+0x40>
     efc:	00 00       	nop
     efe:	95 b1       	in	r25, 0x05	; 5
     f00:	9e 7f       	andi	r25, 0xFE	; 254
     f02:	95 b9       	out	0x05, r25	; 5
     f04:	f6 ea       	ldi	r31, 0xA6	; 166
     f06:	fa 95       	dec	r31
     f08:	f1 f7       	brne	.-4      	; 0xf06 <dht_getdata+0x4a>
     f0a:	00 c0       	rjmp	.+0      	; 0xf0c <dht_getdata+0x50>
     f0c:	95 b1       	in	r25, 0x05	; 5
     f0e:	91 60       	ori	r25, 0x01	; 1
     f10:	95 b9       	out	0x05, r25	; 5
     f12:	94 b1       	in	r25, 0x04	; 4
     f14:	9e 7f       	andi	r25, 0xFE	; 254
     f16:	94 b9       	out	0x04, r25	; 4
     f18:	2d e0       	ldi	r18, 0x0D	; 13
     f1a:	2a 95       	dec	r18
     f1c:	f1 f7       	brne	.-4      	; 0xf1a <dht_getdata+0x5e>
     f1e:	00 00       	nop
     f20:	18 99       	sbic	0x03, 0	; 3
     f22:	9c c0       	rjmp	.+312    	; 0x105c <dht_getdata+0x1a0>
     f24:	8a e1       	ldi	r24, 0x1A	; 26
     f26:	8a 95       	dec	r24
     f28:	f1 f7       	brne	.-4      	; 0xf26 <dht_getdata+0x6a>
     f2a:	00 c0       	rjmp	.+0      	; 0xf2c <dht_getdata+0x70>
     f2c:	18 9b       	sbis	0x03, 0	; 3
     f2e:	98 c0       	rjmp	.+304    	; 0x1060 <dht_getdata+0x1a4>
     f30:	9a e1       	ldi	r25, 0x1A	; 26
     f32:	9a 95       	dec	r25
     f34:	f1 f7       	brne	.-4      	; 0xf32 <dht_getdata+0x76>
     f36:	00 c0       	rjmp	.+0      	; 0xf38 <dht_getdata+0x7c>
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	34 c0       	rjmp	.+104    	; 0xfa4 <dht_getdata+0xe8>
     f3c:	2f 5f       	subi	r18, 0xFF	; 255
     f3e:	3f 4f       	sbci	r19, 0xFF	; 255
     f40:	29 3c       	cpi	r18, 0xC9	; 201
     f42:	31 05       	cpc	r19, r1
     f44:	18 f0       	brcs	.+6      	; 0xf4c <dht_getdata+0x90>
     f46:	8e c0       	rjmp	.+284    	; 0x1064 <dht_getdata+0x1a8>
     f48:	20 e0       	ldi	r18, 0x00	; 0
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	18 9b       	sbis	0x03, 0	; 3
     f4e:	f6 cf       	rjmp	.-20     	; 0xf3c <dht_getdata+0x80>
     f50:	ba e0       	ldi	r27, 0x0A	; 10
     f52:	ba 95       	dec	r27
     f54:	f1 f7       	brne	.-4      	; 0xf52 <dht_getdata+0x96>
     f56:	18 9b       	sbis	0x03, 0	; 3
     f58:	0c c0       	rjmp	.+24     	; 0xf72 <dht_getdata+0xb6>
     f5a:	e7 e0       	ldi	r30, 0x07	; 7
     f5c:	f0 e0       	ldi	r31, 0x00	; 0
     f5e:	e9 1b       	sub	r30, r25
     f60:	f1 09       	sbc	r31, r1
     f62:	21 e0       	ldi	r18, 0x01	; 1
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	02 c0       	rjmp	.+4      	; 0xf6c <dht_getdata+0xb0>
     f68:	22 0f       	add	r18, r18
     f6a:	33 1f       	adc	r19, r19
     f6c:	ea 95       	dec	r30
     f6e:	e2 f7       	brpl	.-8      	; 0xf68 <dht_getdata+0xac>
     f70:	82 2b       	or	r24, r18
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	06 c0       	rjmp	.+12     	; 0xf84 <dht_getdata+0xc8>
     f78:	2f 5f       	subi	r18, 0xFF	; 255
     f7a:	3f 4f       	sbci	r19, 0xFF	; 255
     f7c:	29 3c       	cpi	r18, 0xC9	; 201
     f7e:	31 05       	cpc	r19, r1
     f80:	08 f0       	brcs	.+2      	; 0xf84 <dht_getdata+0xc8>
     f82:	72 c0       	rjmp	.+228    	; 0x1068 <dht_getdata+0x1ac>
     f84:	18 99       	sbic	0x03, 0	; 3
     f86:	f8 cf       	rjmp	.-16     	; 0xf78 <dht_getdata+0xbc>
     f88:	9f 5f       	subi	r25, 0xFF	; 255
     f8a:	02 c0       	rjmp	.+4      	; 0xf90 <dht_getdata+0xd4>
     f8c:	80 e0       	ldi	r24, 0x00	; 0
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	98 30       	cpi	r25, 0x08	; 8
     f92:	d0 f2       	brcs	.-76     	; 0xf48 <dht_getdata+0x8c>
     f94:	e1 e0       	ldi	r30, 0x01	; 1
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	ec 0f       	add	r30, r28
     f9a:	fd 1f       	adc	r31, r29
     f9c:	ea 0f       	add	r30, r26
     f9e:	f1 1d       	adc	r31, r1
     fa0:	80 83       	st	Z, r24
     fa2:	af 5f       	subi	r26, 0xFF	; 255
     fa4:	a5 30       	cpi	r26, 0x05	; 5
     fa6:	90 f3       	brcs	.-28     	; 0xf8c <dht_getdata+0xd0>
     fa8:	84 b1       	in	r24, 0x04	; 4
     faa:	81 60       	ori	r24, 0x01	; 1
     fac:	84 b9       	out	0x04, r24	; 4
     fae:	85 b1       	in	r24, 0x05	; 5
     fb0:	81 60       	ori	r24, 0x01	; 1
     fb2:	85 b9       	out	0x05, r24	; 5
     fb4:	e7 ea       	ldi	r30, 0xA7	; 167
     fb6:	f1 e6       	ldi	r31, 0x61	; 97
     fb8:	31 97       	sbiw	r30, 0x01	; 1
     fba:	f1 f7       	brne	.-4      	; 0xfb8 <dht_getdata+0xfc>
     fbc:	00 c0       	rjmp	.+0      	; 0xfbe <dht_getdata+0x102>
     fbe:	00 00       	nop
     fc0:	09 81       	ldd	r16, Y+1	; 0x01
     fc2:	3a 81       	ldd	r19, Y+2	; 0x02
     fc4:	8b 81       	ldd	r24, Y+3	; 0x03
     fc6:	2c 81       	ldd	r18, Y+4	; 0x04
     fc8:	90 2f       	mov	r25, r16
     fca:	93 0f       	add	r25, r19
     fcc:	98 0f       	add	r25, r24
     fce:	92 0f       	add	r25, r18
     fd0:	ed 81       	ldd	r30, Y+5	; 0x05
     fd2:	9e 13       	cpse	r25, r30
     fd4:	4b c0       	rjmp	.+150    	; 0x106c <dht_getdata+0x1b0>
     fd6:	7b 01       	movw	r14, r22
     fd8:	6a 01       	movw	r12, r20
     fda:	10 e0       	ldi	r17, 0x00	; 0
     fdc:	10 2f       	mov	r17, r16
     fde:	00 27       	eor	r16, r16
     fe0:	03 2b       	or	r16, r19
     fe2:	68 2f       	mov	r22, r24
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	76 2f       	mov	r23, r22
     fe8:	66 27       	eor	r22, r22
     fea:	62 2b       	or	r22, r18
     fec:	77 23       	and	r23, r23
     fee:	a4 f4       	brge	.+40     	; 0x1018 <dht_getdata+0x15c>
     ff0:	7f 77       	andi	r23, 0x7F	; 127
     ff2:	80 e0       	ldi	r24, 0x00	; 0
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <__floatunsisf>
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e2       	ldi	r20, 0x20	; 32
    1000:	51 e4       	ldi	r21, 0x41	; 65
    1002:	0e 94 0d 0a 	call	0x141a	; 0x141a <__divsf3>
    1006:	dc 01       	movw	r26, r24
    1008:	cb 01       	movw	r24, r22
    100a:	b0 58       	subi	r27, 0x80	; 128
    100c:	f6 01       	movw	r30, r12
    100e:	80 83       	st	Z, r24
    1010:	91 83       	std	Z+1, r25	; 0x01
    1012:	a2 83       	std	Z+2, r26	; 0x02
    1014:	b3 83       	std	Z+3, r27	; 0x03
    1016:	10 c0       	rjmp	.+32     	; 0x1038 <dht_getdata+0x17c>
    1018:	80 e0       	ldi	r24, 0x00	; 0
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <__floatunsisf>
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	30 e0       	ldi	r19, 0x00	; 0
    1024:	40 e2       	ldi	r20, 0x20	; 32
    1026:	51 e4       	ldi	r21, 0x41	; 65
    1028:	0e 94 0d 0a 	call	0x141a	; 0x141a <__divsf3>
    102c:	d6 01       	movw	r26, r12
    102e:	6d 93       	st	X+, r22
    1030:	7d 93       	st	X+, r23
    1032:	8d 93       	st	X+, r24
    1034:	9c 93       	st	X, r25
    1036:	13 97       	sbiw	r26, 0x03	; 3
    1038:	b8 01       	movw	r22, r16
    103a:	80 e0       	ldi	r24, 0x00	; 0
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <__floatunsisf>
    1042:	20 e0       	ldi	r18, 0x00	; 0
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	40 e2       	ldi	r20, 0x20	; 32
    1048:	51 e4       	ldi	r21, 0x41	; 65
    104a:	0e 94 0d 0a 	call	0x141a	; 0x141a <__divsf3>
    104e:	f7 01       	movw	r30, r14
    1050:	60 83       	st	Z, r22
    1052:	71 83       	std	Z+1, r23	; 0x01
    1054:	82 83       	std	Z+2, r24	; 0x02
    1056:	93 83       	std	Z+3, r25	; 0x03
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	09 c0       	rjmp	.+18     	; 0x106e <dht_getdata+0x1b2>
    105c:	8f ef       	ldi	r24, 0xFF	; 255
    105e:	07 c0       	rjmp	.+14     	; 0x106e <dht_getdata+0x1b2>
    1060:	8f ef       	ldi	r24, 0xFF	; 255
    1062:	05 c0       	rjmp	.+10     	; 0x106e <dht_getdata+0x1b2>
    1064:	8f ef       	ldi	r24, 0xFF	; 255
    1066:	03 c0       	rjmp	.+6      	; 0x106e <dht_getdata+0x1b2>
    1068:	8f ef       	ldi	r24, 0xFF	; 255
    106a:	01 c0       	rjmp	.+2      	; 0x106e <dht_getdata+0x1b2>
    106c:	8f ef       	ldi	r24, 0xFF	; 255
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	0f 90       	pop	r0
    1074:	0f 90       	pop	r0
    1076:	0f 90       	pop	r0
    1078:	df 91       	pop	r29
    107a:	cf 91       	pop	r28
    107c:	1f 91       	pop	r17
    107e:	0f 91       	pop	r16
    1080:	ff 90       	pop	r15
    1082:	ef 90       	pop	r14
    1084:	df 90       	pop	r13
    1086:	cf 90       	pop	r12
    1088:	08 95       	ret

0000108a <dht_gettemperaturehumidity>:
#if DHT_FLOAT == 1
int8_t dht_gettemperaturehumidity(float *temperature, float *humidity) {
#elif DHT_FLOAT == 0
	int8_t dht_gettemperaturehumidity(int8_t *temperature, int8_t *humidity) {
#endif
	return dht_getdata(temperature, humidity);
    108a:	0e 94 5e 07 	call	0xebc	; 0xebc <dht_getdata>
    108e:	08 95       	ret

00001090 <ds18b20_reset>:
 */
uint8_t ds18b20_reset(int ch) {
	uint8_t i;

	//low for 480us
	DS18B20_PORT &= ~ (1<<ch); //low
    1090:	4b b1       	in	r20, 0x0b	; 11
    1092:	21 e0       	ldi	r18, 0x01	; 1
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	b9 01       	movw	r22, r18
    1098:	02 c0       	rjmp	.+4      	; 0x109e <ds18b20_reset+0xe>
    109a:	66 0f       	add	r22, r22
    109c:	77 1f       	adc	r23, r23
    109e:	8a 95       	dec	r24
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <ds18b20_reset+0xa>
    10a2:	cb 01       	movw	r24, r22
    10a4:	96 2f       	mov	r25, r22
    10a6:	90 95       	com	r25
    10a8:	49 23       	and	r20, r25
    10aa:	4b b9       	out	0x0b, r20	; 11
	DS18B20_DDR |= (1<<ch); //output
    10ac:	2a b1       	in	r18, 0x0a	; 10
    10ae:	28 2b       	or	r18, r24
    10b0:	2a b9       	out	0x0a, r18	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10b2:	70 ea       	ldi	r23, 0xA0	; 160
    10b4:	7a 95       	dec	r23
    10b6:	f1 f7       	brne	.-4      	; 0x10b4 <ds18b20_reset+0x24>
	_delay_us(480);

	//release line and wait for 60uS
	DS18B20_DDR &= ~(1<<ch); //input
    10b8:	2a b1       	in	r18, 0x0a	; 10
    10ba:	92 23       	and	r25, r18
    10bc:	9a b9       	out	0x0a, r25	; 10
    10be:	24 e1       	ldi	r18, 0x14	; 20
    10c0:	2a 95       	dec	r18
    10c2:	f1 f7       	brne	.-4      	; 0x10c0 <ds18b20_reset+0x30>
	_delay_us(60);

	//get value and wait 420us
	i = (DS18B20_PIN & (1<<ch));
    10c4:	99 b1       	in	r25, 0x09	; 9
    10c6:	89 23       	and	r24, r25
    10c8:	6c e8       	ldi	r22, 0x8C	; 140
    10ca:	6a 95       	dec	r22
    10cc:	f1 f7       	brne	.-4      	; 0x10ca <ds18b20_reset+0x3a>
	_delay_us(420);

	//return the read value, 0=ok, 1=error
	return i;
}
    10ce:	08 95       	ret

000010d0 <ds18b20_writebit>:
/*
 * write one bit
 */
void ds18b20_writebit(uint8_t bit, int ch){
	//low for 1uS
	DS18B20_PORT &= ~ (1<<ch); //low
    10d0:	4b b1       	in	r20, 0x0b	; 11
    10d2:	21 e0       	ldi	r18, 0x01	; 1
    10d4:	30 e0       	ldi	r19, 0x00	; 0
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <ds18b20_writebit+0xc>
    10d8:	22 0f       	add	r18, r18
    10da:	33 1f       	adc	r19, r19
    10dc:	6a 95       	dec	r22
    10de:	e2 f7       	brpl	.-8      	; 0x10d8 <ds18b20_writebit+0x8>
    10e0:	92 2f       	mov	r25, r18
    10e2:	90 95       	com	r25
    10e4:	34 2f       	mov	r19, r20
    10e6:	39 23       	and	r19, r25
    10e8:	3b b9       	out	0x0b, r19	; 11
	DS18B20_DDR |= (1<<ch); //output
    10ea:	3a b1       	in	r19, 0x0a	; 10
    10ec:	23 2b       	or	r18, r19
    10ee:	2a b9       	out	0x0a, r18	; 10
    10f0:	00 00       	nop
	_delay_us(1);

	//if we want to write 1, release the line (if not will keep low)
	if(bit)
    10f2:	88 23       	and	r24, r24
    10f4:	19 f0       	breq	.+6      	; 0x10fc <ds18b20_writebit+0x2c>
		DS18B20_DDR &= ~(1<<ch); //input
    10f6:	8a b1       	in	r24, 0x0a	; 10
    10f8:	89 23       	and	r24, r25
    10fa:	8a b9       	out	0x0a, r24	; 10
    10fc:	84 e1       	ldi	r24, 0x14	; 20
    10fe:	8a 95       	dec	r24
    1100:	f1 f7       	brne	.-4      	; 0x10fe <ds18b20_writebit+0x2e>

	//wait 60uS and release the line
	_delay_us(60);
	DS18B20_DDR &= ~(1<<ch); //input
    1102:	8a b1       	in	r24, 0x0a	; 10
    1104:	98 23       	and	r25, r24
    1106:	9a b9       	out	0x0a, r25	; 10
    1108:	08 95       	ret

0000110a <ds18b20_readbit>:
 */
uint8_t ds18b20_readbit(int ch){
	uint8_t bit=0;

	//low for 1uS
	DS18B20_PORT &= ~ (1<<ch); //low
    110a:	4b b1       	in	r20, 0x0b	; 11
    110c:	21 e0       	ldi	r18, 0x01	; 1
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	08 2e       	mov	r0, r24
    1112:	02 c0       	rjmp	.+4      	; 0x1118 <ds18b20_readbit+0xe>
    1114:	22 0f       	add	r18, r18
    1116:	33 1f       	adc	r19, r19
    1118:	0a 94       	dec	r0
    111a:	e2 f7       	brpl	.-8      	; 0x1114 <ds18b20_readbit+0xa>
    111c:	92 2f       	mov	r25, r18
    111e:	90 95       	com	r25
    1120:	34 2f       	mov	r19, r20
    1122:	39 23       	and	r19, r25
    1124:	3b b9       	out	0x0b, r19	; 11
	DS18B20_DDR |= (1<<ch); //output
    1126:	3a b1       	in	r19, 0x0a	; 10
    1128:	23 2b       	or	r18, r19
    112a:	2a b9       	out	0x0a, r18	; 10
    112c:	00 00       	nop
	_delay_us(1);

	//release line and wait for 14uS
	DS18B20_DDR &= ~(1<<ch); //input
    112e:	2a b1       	in	r18, 0x0a	; 10
    1130:	92 23       	and	r25, r18
    1132:	9a b9       	out	0x0a, r25	; 10
    1134:	44 e0       	ldi	r20, 0x04	; 4
    1136:	4a 95       	dec	r20
    1138:	f1 f7       	brne	.-4      	; 0x1136 <ds18b20_readbit+0x2c>
    113a:	00 c0       	rjmp	.+0      	; 0x113c <ds18b20_readbit+0x32>
	_delay_us(14);

	//read the value
	if(DS18B20_PIN & (1<<ch))
    113c:	29 b1       	in	r18, 0x09	; 9
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	a9 01       	movw	r20, r18
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <ds18b20_readbit+0x3e>
    1144:	55 95       	asr	r21
    1146:	47 95       	ror	r20
    1148:	8a 95       	dec	r24
    114a:	e2 f7       	brpl	.-8      	; 0x1144 <ds18b20_readbit+0x3a>
    114c:	40 fd       	sbrc	r20, 0
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <ds18b20_readbit+0x4a>

/*
 * read one bit
 */
uint8_t ds18b20_readbit(int ch){
	uint8_t bit=0;
    1150:	80 e0       	ldi	r24, 0x00	; 0
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <ds18b20_readbit+0x4c>
	DS18B20_DDR &= ~(1<<ch); //input
	_delay_us(14);

	//read the value
	if(DS18B20_PIN & (1<<ch))
		bit=1;
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	5f e0       	ldi	r21, 0x0F	; 15
    1158:	5a 95       	dec	r21
    115a:	f1 f7       	brne	.-4      	; 0x1158 <ds18b20_readbit+0x4e>

	//wait 45uS and return read value
	_delay_us(45);
	return bit;
}
    115c:	08 95       	ret

0000115e <ds18b20_writebyte>:

/*
 * write one byte
 */
void ds18b20_writebyte(uint8_t byte, int ch){
    115e:	0f 93       	push	r16
    1160:	1f 93       	push	r17
    1162:	cf 93       	push	r28
    1164:	df 93       	push	r29
    1166:	c8 2f       	mov	r28, r24
    1168:	8b 01       	movw	r16, r22
	uint8_t i=8;
    116a:	88 e0       	ldi	r24, 0x08	; 8
	while(i--){
    116c:	07 c0       	rjmp	.+14     	; 0x117c <ds18b20_writebyte+0x1e>
		ds18b20_writebit(byte&1, ch);
    116e:	b8 01       	movw	r22, r16
    1170:	8c 2f       	mov	r24, r28
    1172:	81 70       	andi	r24, 0x01	; 1
    1174:	0e 94 68 08 	call	0x10d0	; 0x10d0 <ds18b20_writebit>
		byte >>= 1;
    1178:	c6 95       	lsr	r28
/*
 * write one byte
 */
void ds18b20_writebyte(uint8_t byte, int ch){
	uint8_t i=8;
	while(i--){
    117a:	8d 2f       	mov	r24, r29
    117c:	df ef       	ldi	r29, 0xFF	; 255
    117e:	d8 0f       	add	r29, r24
    1180:	81 11       	cpse	r24, r1
    1182:	f5 cf       	rjmp	.-22     	; 0x116e <ds18b20_writebyte+0x10>
		ds18b20_writebit(byte&1, ch);
		byte >>= 1;
	}
}
    1184:	df 91       	pop	r29
    1186:	cf 91       	pop	r28
    1188:	1f 91       	pop	r17
    118a:	0f 91       	pop	r16
    118c:	08 95       	ret

0000118e <ds18b20_readbyte>:

/*
 * read one byte
 */
uint8_t ds18b20_readbyte(int ch){
    118e:	0f 93       	push	r16
    1190:	1f 93       	push	r17
    1192:	cf 93       	push	r28
    1194:	df 93       	push	r29
    1196:	8c 01       	movw	r16, r24
	uint8_t i=8, n=0;
    1198:	80 e0       	ldi	r24, 0x00	; 0
    119a:	98 e0       	ldi	r25, 0x08	; 8
	while(i--){
    119c:	0b c0       	rjmp	.+22     	; 0x11b4 <ds18b20_readbyte+0x26>
		n >>= 1;
    119e:	c8 2f       	mov	r28, r24
    11a0:	c6 95       	lsr	r28
		n |= (ds18b20_readbit(ch)<<7);
    11a2:	c8 01       	movw	r24, r16
    11a4:	0e 94 85 08 	call	0x110a	; 0x110a <ds18b20_readbit>
    11a8:	20 e8       	ldi	r18, 0x80	; 128
    11aa:	82 9f       	mul	r24, r18
    11ac:	c0 01       	movw	r24, r0
    11ae:	11 24       	eor	r1, r1
    11b0:	8c 2b       	or	r24, r28
/*
 * read one byte
 */
uint8_t ds18b20_readbyte(int ch){
	uint8_t i=8, n=0;
	while(i--){
    11b2:	9d 2f       	mov	r25, r29
    11b4:	df ef       	ldi	r29, 0xFF	; 255
    11b6:	d9 0f       	add	r29, r25
    11b8:	91 11       	cpse	r25, r1
    11ba:	f1 cf       	rjmp	.-30     	; 0x119e <ds18b20_readbyte+0x10>
		n >>= 1;
		n |= (ds18b20_readbit(ch)<<7);
	}
	return n;
}
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	08 95       	ret

000011c6 <ds18b20_gettemp>:

/*
 * get temperature
 */
double ds18b20_gettemp(int ch) {
    11c6:	1f 93       	push	r17
    11c8:	cf 93       	push	r28
    11ca:	df 93       	push	r29
    11cc:	ec 01       	movw	r28, r24
	uint8_t temperature_l;
	uint8_t temperature_h;
	double retd = 0;

	#if DS18B20_STOPINTERRUPTONREAD == 1
	cli();
    11ce:	f8 94       	cli
	#endif

	ds18b20_reset(ch); //reset
    11d0:	0e 94 48 08 	call	0x1090	; 0x1090 <ds18b20_reset>
	ds18b20_writebyte(DS18B20_CMD_SKIPROM, ch); //skip ROM
    11d4:	be 01       	movw	r22, r28
    11d6:	8c ec       	ldi	r24, 0xCC	; 204
    11d8:	0e 94 af 08 	call	0x115e	; 0x115e <ds18b20_writebyte>
	ds18b20_writebyte(DS18B20_CMD_CONVERTTEMP, ch); //start temperature conversion
    11dc:	be 01       	movw	r22, r28
    11de:	84 e4       	ldi	r24, 0x44	; 68
    11e0:	0e 94 af 08 	call	0x115e	; 0x115e <ds18b20_writebyte>

	while(!ds18b20_readbit(ch)); //wait until conversion is complete
    11e4:	ce 01       	movw	r24, r28
    11e6:	0e 94 85 08 	call	0x110a	; 0x110a <ds18b20_readbit>
    11ea:	88 23       	and	r24, r24
    11ec:	d9 f3       	breq	.-10     	; 0x11e4 <ds18b20_gettemp+0x1e>

	ds18b20_reset(ch); //reset
    11ee:	ce 01       	movw	r24, r28
    11f0:	0e 94 48 08 	call	0x1090	; 0x1090 <ds18b20_reset>
	ds18b20_writebyte(DS18B20_CMD_SKIPROM, ch); //skip ROM
    11f4:	be 01       	movw	r22, r28
    11f6:	8c ec       	ldi	r24, 0xCC	; 204
    11f8:	0e 94 af 08 	call	0x115e	; 0x115e <ds18b20_writebyte>
	ds18b20_writebyte(DS18B20_CMD_RSCRATCHPAD, ch); //read scratchpad
    11fc:	be 01       	movw	r22, r28
    11fe:	8e eb       	ldi	r24, 0xBE	; 190
    1200:	0e 94 af 08 	call	0x115e	; 0x115e <ds18b20_writebyte>

	//read 2 byte from scratchpad
	temperature_l = ds18b20_readbyte(ch);
    1204:	ce 01       	movw	r24, r28
    1206:	0e 94 c7 08 	call	0x118e	; 0x118e <ds18b20_readbyte>
    120a:	18 2f       	mov	r17, r24
	temperature_h = ds18b20_readbyte(ch);
    120c:	ce 01       	movw	r24, r28
    120e:	0e 94 c7 08 	call	0x118e	; 0x118e <ds18b20_readbyte>

	#if DS18B20_STOPINTERRUPTONREAD == 1
	sei();
    1212:	78 94       	sei
	#endif

	//convert the 12 bit value obtained
	retd = ( ( temperature_h << 8 ) + temperature_l ) * 0.0625;
    1214:	68 2f       	mov	r22, r24
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	76 2f       	mov	r23, r22
    121a:	66 27       	eor	r22, r22
    121c:	61 0f       	add	r22, r17
    121e:	71 1d       	adc	r23, r1
    1220:	07 2e       	mov	r0, r23
    1222:	00 0c       	add	r0, r0
    1224:	88 0b       	sbc	r24, r24
    1226:	99 0b       	sbc	r25, r25
    1228:	0e 94 81 0a 	call	0x1502	; 0x1502 <__floatsisf>
    122c:	20 e0       	ldi	r18, 0x00	; 0
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	40 e8       	ldi	r20, 0x80	; 128
    1232:	5d e3       	ldi	r21, 0x3D	; 61
    1234:	0e 94 0d 0b 	call	0x161a	; 0x161a <__mulsf3>

	return retd;
}
    1238:	df 91       	pop	r29
    123a:	cf 91       	pop	r28
    123c:	1f 91       	pop	r17
    123e:	08 95       	ret

00001240 <main>:

#include <main.h>


int main(void)
{
    1240:	cf 93       	push	r28
    1242:	df 93       	push	r29
    1244:	cd b7       	in	r28, 0x3d	; 61
    1246:	de b7       	in	r29, 0x3e	; 62
    1248:	c4 56       	subi	r28, 0x64	; 100
    124a:	d1 09       	sbc	r29, r1
    124c:	0f b6       	in	r0, 0x3f	; 63
    124e:	f8 94       	cli
    1250:	de bf       	out	0x3e, r29	; 62
    1252:	0f be       	out	0x3f, r0	; 63
    1254:	cd bf       	out	0x3d, r28	; 61

	char printbuff[100];
	double Peltier_T1, Peltier_T2;

	i2c_init();
    1256:	0e 94 f6 04 	call	0x9ec	; 0x9ec <i2c_init>
	oled_init();
    125a:	0e 94 87 05 	call	0xb0e	; 0xb0e <oled_init>
		
		/*								 /
		/	Printing PlantHut Version	 /
		/								*/
		
		oled_font_size(0);
    125e:	80 e0       	ldi	r24, 0x00	; 0
    1260:	0e 94 9f 05 	call	0xb3e	; 0xb3e <oled_font_size>
		oled_gotoxy(0,7);
    1264:	67 e0       	ldi	r22, 0x07	; 7
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		oled_write("PlantHut V%i.%i.%i", version_major, version_minor, version_build);
    126c:	1f 92       	push	r1
    126e:	86 e0       	ldi	r24, 0x06	; 6
    1270:	8f 93       	push	r24
    1272:	1f 92       	push	r1
    1274:	83 e0       	ldi	r24, 0x03	; 3
    1276:	8f 93       	push	r24
    1278:	1f 92       	push	r1
    127a:	1f 92       	push	r1
    127c:	81 eb       	ldi	r24, 0xB1	; 177
    127e:	99 e0       	ldi	r25, 0x09	; 9
    1280:	9f 93       	push	r25
    1282:	8f 93       	push	r24
    1284:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
		


		Peltier_T1 = ds18b20_gettemp(PD7);
    1288:	87 e0       	ldi	r24, 0x07	; 7
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <ds18b20_gettemp>
		dtostrf(Peltier_T1, 3, 3, printbuff);
    1290:	9e 01       	movw	r18, r28
    1292:	2f 5f       	subi	r18, 0xFF	; 255
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	79 01       	movw	r14, r18
    1298:	89 01       	movw	r16, r18
    129a:	23 e0       	ldi	r18, 0x03	; 3
    129c:	43 e0       	ldi	r20, 0x03	; 3
    129e:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <dtostrf>
		oled_gotoxy(0,3);
    12a2:	63 e0       	ldi	r22, 0x03	; 3
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		oled_write("T1: ");  oled_write("%s",printbuff); oled_write("C");
    12aa:	8c ea       	ldi	r24, 0xAC	; 172
    12ac:	99 e0       	ldi	r25, 0x09	; 9
    12ae:	9f 93       	push	r25
    12b0:	8f 93       	push	r24
    12b2:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    12b6:	ff 92       	push	r15
    12b8:	ef 92       	push	r14
    12ba:	89 ea       	ldi	r24, 0xA9	; 169
    12bc:	99 e0       	ldi	r25, 0x09	; 9
    12be:	9f 93       	push	r25
    12c0:	8f 93       	push	r24
    12c2:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    12c6:	87 ea       	ldi	r24, 0xA7	; 167
    12c8:	99 e0       	ldi	r25, 0x09	; 9
    12ca:	9f 93       	push	r25
    12cc:	8f 93       	push	r24
    12ce:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
		
		Peltier_T2 = ds18b20_gettemp(PD6);
    12d2:	86 e0       	ldi	r24, 0x06	; 6
    12d4:	90 e0       	ldi	r25, 0x00	; 0
    12d6:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <ds18b20_gettemp>
		dtostrf(Peltier_T2, 3, 3, printbuff);
    12da:	23 e0       	ldi	r18, 0x03	; 3
    12dc:	43 e0       	ldi	r20, 0x03	; 3
    12de:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <dtostrf>
		oled_gotoxy(0,4);
    12e2:	64 e0       	ldi	r22, 0x04	; 4
    12e4:	80 e0       	ldi	r24, 0x00	; 0
    12e6:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
		oled_write("T2: ");  oled_write("%s",printbuff); oled_write("C");
    12ea:	82 ea       	ldi	r24, 0xA2	; 162
    12ec:	99 e0       	ldi	r25, 0x09	; 9
    12ee:	9f 93       	push	r25
    12f0:	8f 93       	push	r24
    12f2:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    12f6:	ff 92       	push	r15
    12f8:	ef 92       	push	r14
    12fa:	8f e9       	ldi	r24, 0x9F	; 159
    12fc:	99 e0       	ldi	r25, 0x09	; 9
    12fe:	9f 93       	push	r25
    1300:	8f 93       	push	r24
    1302:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    1306:	8d e9       	ldi	r24, 0x9D	; 157
    1308:	99 e0       	ldi	r25, 0x09	; 9
    130a:	9f 93       	push	r25
    130c:	8f 93       	push	r24
    130e:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
		

		if(dht_gettemperaturehumidity(&temperature, &humidity) != -1) {
    1312:	63 e0       	ldi	r22, 0x03	; 3
    1314:	71 e0       	ldi	r23, 0x01	; 1
    1316:	87 e0       	ldi	r24, 0x07	; 7
    1318:	91 e0       	ldi	r25, 0x01	; 1
    131a:	0e 94 45 08 	call	0x108a	; 0x108a <dht_gettemperaturehumidity>
    131e:	0f b6       	in	r0, 0x3f	; 63
    1320:	f8 94       	cli
    1322:	de bf       	out	0x3e, r29	; 62
    1324:	0f be       	out	0x3f, r0	; 63
    1326:	cd bf       	out	0x3d, r28	; 61
    1328:	8f 3f       	cpi	r24, 0xFF	; 255
    132a:	09 f4       	brne	.+2      	; 0x132e <main+0xee>
    132c:	51 c0       	rjmp	.+162    	; 0x13d0 <main+0x190>

			oled_font_size(0);
    132e:	80 e0       	ldi	r24, 0x00	; 0
    1330:	0e 94 9f 05 	call	0xb3e	; 0xb3e <oled_font_size>
	
			dtostrf(temperature, 3, 3, printbuff);
    1334:	60 91 07 01 	lds	r22, 0x0107	; 0x800107 <temperature>
    1338:	70 91 08 01 	lds	r23, 0x0108	; 0x800108 <temperature+0x1>
    133c:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <temperature+0x2>
    1340:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <temperature+0x3>
    1344:	23 e0       	ldi	r18, 0x03	; 3
    1346:	43 e0       	ldi	r20, 0x03	; 3
    1348:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <dtostrf>
			oled_gotoxy(0,1);
    134c:	61 e0       	ldi	r22, 0x01	; 1
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
			oled_write("T: "); 	oled_write("%s",printbuff); oled_write("C");
    1354:	89 e9       	ldi	r24, 0x99	; 153
    1356:	99 e0       	ldi	r25, 0x09	; 9
    1358:	9f 93       	push	r25
    135a:	8f 93       	push	r24
    135c:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    1360:	ff 92       	push	r15
    1362:	ef 92       	push	r14
    1364:	86 e9       	ldi	r24, 0x96	; 150
    1366:	99 e0       	ldi	r25, 0x09	; 9
    1368:	9f 93       	push	r25
    136a:	8f 93       	push	r24
    136c:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    1370:	84 e9       	ldi	r24, 0x94	; 148
    1372:	99 e0       	ldi	r25, 0x09	; 9
    1374:	9f 93       	push	r25
    1376:	8f 93       	push	r24
    1378:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
	
			dtostrf(humidity, 3, 3, printbuff);
    137c:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <humidity>
    1380:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <humidity+0x1>
    1384:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <humidity+0x2>
    1388:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <humidity+0x3>
    138c:	23 e0       	ldi	r18, 0x03	; 3
    138e:	43 e0       	ldi	r20, 0x03	; 3
    1390:	0e 94 7a 0b 	call	0x16f4	; 0x16f4 <dtostrf>
			oled_gotoxy(0,2);
    1394:	62 e0       	ldi	r22, 0x02	; 2
    1396:	80 e0       	ldi	r24, 0x00	; 0
    1398:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
			oled_write("H: "); 	oled_write("%s",printbuff); oled_write("H");
    139c:	80 e9       	ldi	r24, 0x90	; 144
    139e:	99 e0       	ldi	r25, 0x09	; 9
    13a0:	9f 93       	push	r25
    13a2:	8f 93       	push	r24
    13a4:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    13a8:	ff 92       	push	r15
    13aa:	ef 92       	push	r14
    13ac:	8d e8       	ldi	r24, 0x8D	; 141
    13ae:	99 e0       	ldi	r25, 0x09	; 9
    13b0:	9f 93       	push	r25
    13b2:	8f 93       	push	r24
    13b4:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    13b8:	8b e8       	ldi	r24, 0x8B	; 139
    13ba:	99 e0       	ldi	r25, 0x09	; 9
    13bc:	9f 93       	push	r25
    13be:	8f 93       	push	r24
    13c0:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    13c4:	0f b6       	in	r0, 0x3f	; 63
    13c6:	f8 94       	cli
    13c8:	de bf       	out	0x3e, r29	; 62
    13ca:	0f be       	out	0x3f, r0	; 63
    13cc:	cd bf       	out	0x3d, r28	; 61
    13ce:	1b c0       	rjmp	.+54     	; 0x1406 <main+0x1c6>

			} else {
	
			//oled_clear_screen();
			oled_font_size(0);
    13d0:	80 e0       	ldi	r24, 0x00	; 0
    13d2:	0e 94 9f 05 	call	0xb3e	; 0xb3e <oled_font_size>
			oled_gotoxy(0,1);
    13d6:	61 e0       	ldi	r22, 0x01	; 1
    13d8:	80 e0       	ldi	r24, 0x00	; 0
    13da:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
			oled_write("Error");
    13de:	85 e8       	ldi	r24, 0x85	; 133
    13e0:	99 e0       	ldi	r25, 0x09	; 9
    13e2:	9f 93       	push	r25
    13e4:	8f 93       	push	r24
    13e6:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
			oled_gotoxy(0,2);
    13ea:	62 e0       	ldi	r22, 0x02	; 2
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	0e 94 46 05 	call	0xa8c	; 0xa8c <oled_gotoxy>
			oled_write("Error");
    13f2:	8f e7       	ldi	r24, 0x7F	; 127
    13f4:	99 e0       	ldi	r25, 0x09	; 9
    13f6:	9f 93       	push	r25
    13f8:	8f 93       	push	r24
    13fa:	0e 94 85 06 	call	0xd0a	; 0xd0a <oled_write_P>
    13fe:	0f 90       	pop	r0
    1400:	0f 90       	pop	r0
    1402:	0f 90       	pop	r0
    1404:	0f 90       	pop	r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1406:	9f ed       	ldi	r25, 0xDF	; 223
    1408:	23 e9       	ldi	r18, 0x93	; 147
    140a:	34 e0       	ldi	r19, 0x04	; 4
    140c:	91 50       	subi	r25, 0x01	; 1
    140e:	20 40       	sbci	r18, 0x00	; 0
    1410:	30 40       	sbci	r19, 0x00	; 0
    1412:	e1 f7       	brne	.-8      	; 0x140c <main+0x1cc>
    1414:	00 c0       	rjmp	.+0      	; 0x1416 <main+0x1d6>
    1416:	00 00       	nop
    1418:	22 cf       	rjmp	.-444    	; 0x125e <main+0x1e>

0000141a <__divsf3>:
    141a:	0e 94 21 0a 	call	0x1442	; 0x1442 <__divsf3x>
    141e:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_round>
    1422:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__fp_pscB>
    1426:	58 f0       	brcs	.+22     	; 0x143e <__divsf3+0x24>
    1428:	0e 94 c5 0a 	call	0x158a	; 0x158a <__fp_pscA>
    142c:	40 f0       	brcs	.+16     	; 0x143e <__divsf3+0x24>
    142e:	29 f4       	brne	.+10     	; 0x143a <__divsf3+0x20>
    1430:	5f 3f       	cpi	r21, 0xFF	; 255
    1432:	29 f0       	breq	.+10     	; 0x143e <__divsf3+0x24>
    1434:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__fp_inf>
    1438:	51 11       	cpse	r21, r1
    143a:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__fp_szero>
    143e:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__fp_nan>

00001442 <__divsf3x>:
    1442:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__fp_split3>
    1446:	68 f3       	brcs	.-38     	; 0x1422 <__divsf3+0x8>

00001448 <__divsf3_pse>:
    1448:	99 23       	and	r25, r25
    144a:	b1 f3       	breq	.-20     	; 0x1438 <__divsf3+0x1e>
    144c:	55 23       	and	r21, r21
    144e:	91 f3       	breq	.-28     	; 0x1434 <__divsf3+0x1a>
    1450:	95 1b       	sub	r25, r21
    1452:	55 0b       	sbc	r21, r21
    1454:	bb 27       	eor	r27, r27
    1456:	aa 27       	eor	r26, r26
    1458:	62 17       	cp	r22, r18
    145a:	73 07       	cpc	r23, r19
    145c:	84 07       	cpc	r24, r20
    145e:	38 f0       	brcs	.+14     	; 0x146e <__divsf3_pse+0x26>
    1460:	9f 5f       	subi	r25, 0xFF	; 255
    1462:	5f 4f       	sbci	r21, 0xFF	; 255
    1464:	22 0f       	add	r18, r18
    1466:	33 1f       	adc	r19, r19
    1468:	44 1f       	adc	r20, r20
    146a:	aa 1f       	adc	r26, r26
    146c:	a9 f3       	breq	.-22     	; 0x1458 <__divsf3_pse+0x10>
    146e:	35 d0       	rcall	.+106    	; 0x14da <__divsf3_pse+0x92>
    1470:	0e 2e       	mov	r0, r30
    1472:	3a f0       	brmi	.+14     	; 0x1482 <__divsf3_pse+0x3a>
    1474:	e0 e8       	ldi	r30, 0x80	; 128
    1476:	32 d0       	rcall	.+100    	; 0x14dc <__divsf3_pse+0x94>
    1478:	91 50       	subi	r25, 0x01	; 1
    147a:	50 40       	sbci	r21, 0x00	; 0
    147c:	e6 95       	lsr	r30
    147e:	00 1c       	adc	r0, r0
    1480:	ca f7       	brpl	.-14     	; 0x1474 <__divsf3_pse+0x2c>
    1482:	2b d0       	rcall	.+86     	; 0x14da <__divsf3_pse+0x92>
    1484:	fe 2f       	mov	r31, r30
    1486:	29 d0       	rcall	.+82     	; 0x14da <__divsf3_pse+0x92>
    1488:	66 0f       	add	r22, r22
    148a:	77 1f       	adc	r23, r23
    148c:	88 1f       	adc	r24, r24
    148e:	bb 1f       	adc	r27, r27
    1490:	26 17       	cp	r18, r22
    1492:	37 07       	cpc	r19, r23
    1494:	48 07       	cpc	r20, r24
    1496:	ab 07       	cpc	r26, r27
    1498:	b0 e8       	ldi	r27, 0x80	; 128
    149a:	09 f0       	breq	.+2      	; 0x149e <__divsf3_pse+0x56>
    149c:	bb 0b       	sbc	r27, r27
    149e:	80 2d       	mov	r24, r0
    14a0:	bf 01       	movw	r22, r30
    14a2:	ff 27       	eor	r31, r31
    14a4:	93 58       	subi	r25, 0x83	; 131
    14a6:	5f 4f       	sbci	r21, 0xFF	; 255
    14a8:	3a f0       	brmi	.+14     	; 0x14b8 <__divsf3_pse+0x70>
    14aa:	9e 3f       	cpi	r25, 0xFE	; 254
    14ac:	51 05       	cpc	r21, r1
    14ae:	78 f0       	brcs	.+30     	; 0x14ce <__divsf3_pse+0x86>
    14b0:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__fp_inf>
    14b4:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__fp_szero>
    14b8:	5f 3f       	cpi	r21, 0xFF	; 255
    14ba:	e4 f3       	brlt	.-8      	; 0x14b4 <__divsf3_pse+0x6c>
    14bc:	98 3e       	cpi	r25, 0xE8	; 232
    14be:	d4 f3       	brlt	.-12     	; 0x14b4 <__divsf3_pse+0x6c>
    14c0:	86 95       	lsr	r24
    14c2:	77 95       	ror	r23
    14c4:	67 95       	ror	r22
    14c6:	b7 95       	ror	r27
    14c8:	f7 95       	ror	r31
    14ca:	9f 5f       	subi	r25, 0xFF	; 255
    14cc:	c9 f7       	brne	.-14     	; 0x14c0 <__divsf3_pse+0x78>
    14ce:	88 0f       	add	r24, r24
    14d0:	91 1d       	adc	r25, r1
    14d2:	96 95       	lsr	r25
    14d4:	87 95       	ror	r24
    14d6:	97 f9       	bld	r25, 7
    14d8:	08 95       	ret
    14da:	e1 e0       	ldi	r30, 0x01	; 1
    14dc:	66 0f       	add	r22, r22
    14de:	77 1f       	adc	r23, r23
    14e0:	88 1f       	adc	r24, r24
    14e2:	bb 1f       	adc	r27, r27
    14e4:	62 17       	cp	r22, r18
    14e6:	73 07       	cpc	r23, r19
    14e8:	84 07       	cpc	r24, r20
    14ea:	ba 07       	cpc	r27, r26
    14ec:	20 f0       	brcs	.+8      	; 0x14f6 <__divsf3_pse+0xae>
    14ee:	62 1b       	sub	r22, r18
    14f0:	73 0b       	sbc	r23, r19
    14f2:	84 0b       	sbc	r24, r20
    14f4:	ba 0b       	sbc	r27, r26
    14f6:	ee 1f       	adc	r30, r30
    14f8:	88 f7       	brcc	.-30     	; 0x14dc <__divsf3_pse+0x94>
    14fa:	e0 95       	com	r30
    14fc:	08 95       	ret

000014fe <__floatunsisf>:
    14fe:	e8 94       	clt
    1500:	09 c0       	rjmp	.+18     	; 0x1514 <__floatsisf+0x12>

00001502 <__floatsisf>:
    1502:	97 fb       	bst	r25, 7
    1504:	3e f4       	brtc	.+14     	; 0x1514 <__floatsisf+0x12>
    1506:	90 95       	com	r25
    1508:	80 95       	com	r24
    150a:	70 95       	com	r23
    150c:	61 95       	neg	r22
    150e:	7f 4f       	sbci	r23, 0xFF	; 255
    1510:	8f 4f       	sbci	r24, 0xFF	; 255
    1512:	9f 4f       	sbci	r25, 0xFF	; 255
    1514:	99 23       	and	r25, r25
    1516:	a9 f0       	breq	.+42     	; 0x1542 <__floatsisf+0x40>
    1518:	f9 2f       	mov	r31, r25
    151a:	96 e9       	ldi	r25, 0x96	; 150
    151c:	bb 27       	eor	r27, r27
    151e:	93 95       	inc	r25
    1520:	f6 95       	lsr	r31
    1522:	87 95       	ror	r24
    1524:	77 95       	ror	r23
    1526:	67 95       	ror	r22
    1528:	b7 95       	ror	r27
    152a:	f1 11       	cpse	r31, r1
    152c:	f8 cf       	rjmp	.-16     	; 0x151e <__floatsisf+0x1c>
    152e:	fa f4       	brpl	.+62     	; 0x156e <__floatsisf+0x6c>
    1530:	bb 0f       	add	r27, r27
    1532:	11 f4       	brne	.+4      	; 0x1538 <__floatsisf+0x36>
    1534:	60 ff       	sbrs	r22, 0
    1536:	1b c0       	rjmp	.+54     	; 0x156e <__floatsisf+0x6c>
    1538:	6f 5f       	subi	r22, 0xFF	; 255
    153a:	7f 4f       	sbci	r23, 0xFF	; 255
    153c:	8f 4f       	sbci	r24, 0xFF	; 255
    153e:	9f 4f       	sbci	r25, 0xFF	; 255
    1540:	16 c0       	rjmp	.+44     	; 0x156e <__floatsisf+0x6c>
    1542:	88 23       	and	r24, r24
    1544:	11 f0       	breq	.+4      	; 0x154a <__floatsisf+0x48>
    1546:	96 e9       	ldi	r25, 0x96	; 150
    1548:	11 c0       	rjmp	.+34     	; 0x156c <__floatsisf+0x6a>
    154a:	77 23       	and	r23, r23
    154c:	21 f0       	breq	.+8      	; 0x1556 <__floatsisf+0x54>
    154e:	9e e8       	ldi	r25, 0x8E	; 142
    1550:	87 2f       	mov	r24, r23
    1552:	76 2f       	mov	r23, r22
    1554:	05 c0       	rjmp	.+10     	; 0x1560 <__floatsisf+0x5e>
    1556:	66 23       	and	r22, r22
    1558:	71 f0       	breq	.+28     	; 0x1576 <__floatsisf+0x74>
    155a:	96 e8       	ldi	r25, 0x86	; 134
    155c:	86 2f       	mov	r24, r22
    155e:	70 e0       	ldi	r23, 0x00	; 0
    1560:	60 e0       	ldi	r22, 0x00	; 0
    1562:	2a f0       	brmi	.+10     	; 0x156e <__floatsisf+0x6c>
    1564:	9a 95       	dec	r25
    1566:	66 0f       	add	r22, r22
    1568:	77 1f       	adc	r23, r23
    156a:	88 1f       	adc	r24, r24
    156c:	da f7       	brpl	.-10     	; 0x1564 <__floatsisf+0x62>
    156e:	88 0f       	add	r24, r24
    1570:	96 95       	lsr	r25
    1572:	87 95       	ror	r24
    1574:	97 f9       	bld	r25, 7
    1576:	08 95       	ret

00001578 <__fp_inf>:
    1578:	97 f9       	bld	r25, 7
    157a:	9f 67       	ori	r25, 0x7F	; 127
    157c:	80 e8       	ldi	r24, 0x80	; 128
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	60 e0       	ldi	r22, 0x00	; 0
    1582:	08 95       	ret

00001584 <__fp_nan>:
    1584:	9f ef       	ldi	r25, 0xFF	; 255
    1586:	80 ec       	ldi	r24, 0xC0	; 192
    1588:	08 95       	ret

0000158a <__fp_pscA>:
    158a:	00 24       	eor	r0, r0
    158c:	0a 94       	dec	r0
    158e:	16 16       	cp	r1, r22
    1590:	17 06       	cpc	r1, r23
    1592:	18 06       	cpc	r1, r24
    1594:	09 06       	cpc	r0, r25
    1596:	08 95       	ret

00001598 <__fp_pscB>:
    1598:	00 24       	eor	r0, r0
    159a:	0a 94       	dec	r0
    159c:	12 16       	cp	r1, r18
    159e:	13 06       	cpc	r1, r19
    15a0:	14 06       	cpc	r1, r20
    15a2:	05 06       	cpc	r0, r21
    15a4:	08 95       	ret

000015a6 <__fp_round>:
    15a6:	09 2e       	mov	r0, r25
    15a8:	03 94       	inc	r0
    15aa:	00 0c       	add	r0, r0
    15ac:	11 f4       	brne	.+4      	; 0x15b2 <__fp_round+0xc>
    15ae:	88 23       	and	r24, r24
    15b0:	52 f0       	brmi	.+20     	; 0x15c6 <__fp_round+0x20>
    15b2:	bb 0f       	add	r27, r27
    15b4:	40 f4       	brcc	.+16     	; 0x15c6 <__fp_round+0x20>
    15b6:	bf 2b       	or	r27, r31
    15b8:	11 f4       	brne	.+4      	; 0x15be <__fp_round+0x18>
    15ba:	60 ff       	sbrs	r22, 0
    15bc:	04 c0       	rjmp	.+8      	; 0x15c6 <__fp_round+0x20>
    15be:	6f 5f       	subi	r22, 0xFF	; 255
    15c0:	7f 4f       	sbci	r23, 0xFF	; 255
    15c2:	8f 4f       	sbci	r24, 0xFF	; 255
    15c4:	9f 4f       	sbci	r25, 0xFF	; 255
    15c6:	08 95       	ret

000015c8 <__fp_split3>:
    15c8:	57 fd       	sbrc	r21, 7
    15ca:	90 58       	subi	r25, 0x80	; 128
    15cc:	44 0f       	add	r20, r20
    15ce:	55 1f       	adc	r21, r21
    15d0:	59 f0       	breq	.+22     	; 0x15e8 <__fp_splitA+0x10>
    15d2:	5f 3f       	cpi	r21, 0xFF	; 255
    15d4:	71 f0       	breq	.+28     	; 0x15f2 <__fp_splitA+0x1a>
    15d6:	47 95       	ror	r20

000015d8 <__fp_splitA>:
    15d8:	88 0f       	add	r24, r24
    15da:	97 fb       	bst	r25, 7
    15dc:	99 1f       	adc	r25, r25
    15de:	61 f0       	breq	.+24     	; 0x15f8 <__fp_splitA+0x20>
    15e0:	9f 3f       	cpi	r25, 0xFF	; 255
    15e2:	79 f0       	breq	.+30     	; 0x1602 <__fp_splitA+0x2a>
    15e4:	87 95       	ror	r24
    15e6:	08 95       	ret
    15e8:	12 16       	cp	r1, r18
    15ea:	13 06       	cpc	r1, r19
    15ec:	14 06       	cpc	r1, r20
    15ee:	55 1f       	adc	r21, r21
    15f0:	f2 cf       	rjmp	.-28     	; 0x15d6 <__fp_split3+0xe>
    15f2:	46 95       	lsr	r20
    15f4:	f1 df       	rcall	.-30     	; 0x15d8 <__fp_splitA>
    15f6:	08 c0       	rjmp	.+16     	; 0x1608 <__fp_splitA+0x30>
    15f8:	16 16       	cp	r1, r22
    15fa:	17 06       	cpc	r1, r23
    15fc:	18 06       	cpc	r1, r24
    15fe:	99 1f       	adc	r25, r25
    1600:	f1 cf       	rjmp	.-30     	; 0x15e4 <__fp_splitA+0xc>
    1602:	86 95       	lsr	r24
    1604:	71 05       	cpc	r23, r1
    1606:	61 05       	cpc	r22, r1
    1608:	08 94       	sec
    160a:	08 95       	ret

0000160c <__fp_zero>:
    160c:	e8 94       	clt

0000160e <__fp_szero>:
    160e:	bb 27       	eor	r27, r27
    1610:	66 27       	eor	r22, r22
    1612:	77 27       	eor	r23, r23
    1614:	cb 01       	movw	r24, r22
    1616:	97 f9       	bld	r25, 7
    1618:	08 95       	ret

0000161a <__mulsf3>:
    161a:	0e 94 20 0b 	call	0x1640	; 0x1640 <__mulsf3x>
    161e:	0c 94 d3 0a 	jmp	0x15a6	; 0x15a6 <__fp_round>
    1622:	0e 94 c5 0a 	call	0x158a	; 0x158a <__fp_pscA>
    1626:	38 f0       	brcs	.+14     	; 0x1636 <__mulsf3+0x1c>
    1628:	0e 94 cc 0a 	call	0x1598	; 0x1598 <__fp_pscB>
    162c:	20 f0       	brcs	.+8      	; 0x1636 <__mulsf3+0x1c>
    162e:	95 23       	and	r25, r21
    1630:	11 f0       	breq	.+4      	; 0x1636 <__mulsf3+0x1c>
    1632:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__fp_inf>
    1636:	0c 94 c2 0a 	jmp	0x1584	; 0x1584 <__fp_nan>
    163a:	11 24       	eor	r1, r1
    163c:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__fp_szero>

00001640 <__mulsf3x>:
    1640:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__fp_split3>
    1644:	70 f3       	brcs	.-36     	; 0x1622 <__mulsf3+0x8>

00001646 <__mulsf3_pse>:
    1646:	95 9f       	mul	r25, r21
    1648:	c1 f3       	breq	.-16     	; 0x163a <__mulsf3+0x20>
    164a:	95 0f       	add	r25, r21
    164c:	50 e0       	ldi	r21, 0x00	; 0
    164e:	55 1f       	adc	r21, r21
    1650:	62 9f       	mul	r22, r18
    1652:	f0 01       	movw	r30, r0
    1654:	72 9f       	mul	r23, r18
    1656:	bb 27       	eor	r27, r27
    1658:	f0 0d       	add	r31, r0
    165a:	b1 1d       	adc	r27, r1
    165c:	63 9f       	mul	r22, r19
    165e:	aa 27       	eor	r26, r26
    1660:	f0 0d       	add	r31, r0
    1662:	b1 1d       	adc	r27, r1
    1664:	aa 1f       	adc	r26, r26
    1666:	64 9f       	mul	r22, r20
    1668:	66 27       	eor	r22, r22
    166a:	b0 0d       	add	r27, r0
    166c:	a1 1d       	adc	r26, r1
    166e:	66 1f       	adc	r22, r22
    1670:	82 9f       	mul	r24, r18
    1672:	22 27       	eor	r18, r18
    1674:	b0 0d       	add	r27, r0
    1676:	a1 1d       	adc	r26, r1
    1678:	62 1f       	adc	r22, r18
    167a:	73 9f       	mul	r23, r19
    167c:	b0 0d       	add	r27, r0
    167e:	a1 1d       	adc	r26, r1
    1680:	62 1f       	adc	r22, r18
    1682:	83 9f       	mul	r24, r19
    1684:	a0 0d       	add	r26, r0
    1686:	61 1d       	adc	r22, r1
    1688:	22 1f       	adc	r18, r18
    168a:	74 9f       	mul	r23, r20
    168c:	33 27       	eor	r19, r19
    168e:	a0 0d       	add	r26, r0
    1690:	61 1d       	adc	r22, r1
    1692:	23 1f       	adc	r18, r19
    1694:	84 9f       	mul	r24, r20
    1696:	60 0d       	add	r22, r0
    1698:	21 1d       	adc	r18, r1
    169a:	82 2f       	mov	r24, r18
    169c:	76 2f       	mov	r23, r22
    169e:	6a 2f       	mov	r22, r26
    16a0:	11 24       	eor	r1, r1
    16a2:	9f 57       	subi	r25, 0x7F	; 127
    16a4:	50 40       	sbci	r21, 0x00	; 0
    16a6:	9a f0       	brmi	.+38     	; 0x16ce <__mulsf3_pse+0x88>
    16a8:	f1 f0       	breq	.+60     	; 0x16e6 <__mulsf3_pse+0xa0>
    16aa:	88 23       	and	r24, r24
    16ac:	4a f0       	brmi	.+18     	; 0x16c0 <__mulsf3_pse+0x7a>
    16ae:	ee 0f       	add	r30, r30
    16b0:	ff 1f       	adc	r31, r31
    16b2:	bb 1f       	adc	r27, r27
    16b4:	66 1f       	adc	r22, r22
    16b6:	77 1f       	adc	r23, r23
    16b8:	88 1f       	adc	r24, r24
    16ba:	91 50       	subi	r25, 0x01	; 1
    16bc:	50 40       	sbci	r21, 0x00	; 0
    16be:	a9 f7       	brne	.-22     	; 0x16aa <__mulsf3_pse+0x64>
    16c0:	9e 3f       	cpi	r25, 0xFE	; 254
    16c2:	51 05       	cpc	r21, r1
    16c4:	80 f0       	brcs	.+32     	; 0x16e6 <__mulsf3_pse+0xa0>
    16c6:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__fp_inf>
    16ca:	0c 94 07 0b 	jmp	0x160e	; 0x160e <__fp_szero>
    16ce:	5f 3f       	cpi	r21, 0xFF	; 255
    16d0:	e4 f3       	brlt	.-8      	; 0x16ca <__mulsf3_pse+0x84>
    16d2:	98 3e       	cpi	r25, 0xE8	; 232
    16d4:	d4 f3       	brlt	.-12     	; 0x16ca <__mulsf3_pse+0x84>
    16d6:	86 95       	lsr	r24
    16d8:	77 95       	ror	r23
    16da:	67 95       	ror	r22
    16dc:	b7 95       	ror	r27
    16de:	f7 95       	ror	r31
    16e0:	e7 95       	ror	r30
    16e2:	9f 5f       	subi	r25, 0xFF	; 255
    16e4:	c1 f7       	brne	.-16     	; 0x16d6 <__mulsf3_pse+0x90>
    16e6:	fe 2b       	or	r31, r30
    16e8:	88 0f       	add	r24, r24
    16ea:	91 1d       	adc	r25, r1
    16ec:	96 95       	lsr	r25
    16ee:	87 95       	ror	r24
    16f0:	97 f9       	bld	r25, 7
    16f2:	08 95       	ret

000016f4 <dtostrf>:
    16f4:	ef 92       	push	r14
    16f6:	0f 93       	push	r16
    16f8:	1f 93       	push	r17
    16fa:	cf 93       	push	r28
    16fc:	df 93       	push	r29
    16fe:	e8 01       	movw	r28, r16
    1700:	47 fd       	sbrc	r20, 7
    1702:	02 c0       	rjmp	.+4      	; 0x1708 <dtostrf+0x14>
    1704:	34 e0       	ldi	r19, 0x04	; 4
    1706:	01 c0       	rjmp	.+2      	; 0x170a <dtostrf+0x16>
    1708:	34 e1       	ldi	r19, 0x14	; 20
    170a:	04 2e       	mov	r0, r20
    170c:	00 0c       	add	r0, r0
    170e:	55 0b       	sbc	r21, r21
    1710:	57 ff       	sbrs	r21, 7
    1712:	03 c0       	rjmp	.+6      	; 0x171a <dtostrf+0x26>
    1714:	51 95       	neg	r21
    1716:	41 95       	neg	r20
    1718:	51 09       	sbc	r21, r1
    171a:	e3 2e       	mov	r14, r19
    171c:	02 2f       	mov	r16, r18
    171e:	24 2f       	mov	r18, r20
    1720:	ae 01       	movw	r20, r28
    1722:	0e 94 02 0c 	call	0x1804	; 0x1804 <dtoa_prf>
    1726:	ce 01       	movw	r24, r28
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	ef 90       	pop	r14
    1732:	08 95       	ret

00001734 <atoi>:
    1734:	fc 01       	movw	r30, r24
    1736:	88 27       	eor	r24, r24
    1738:	99 27       	eor	r25, r25
    173a:	e8 94       	clt
    173c:	21 91       	ld	r18, Z+
    173e:	20 32       	cpi	r18, 0x20	; 32
    1740:	e9 f3       	breq	.-6      	; 0x173c <atoi+0x8>
    1742:	29 30       	cpi	r18, 0x09	; 9
    1744:	10 f0       	brcs	.+4      	; 0x174a <atoi+0x16>
    1746:	2e 30       	cpi	r18, 0x0E	; 14
    1748:	c8 f3       	brcs	.-14     	; 0x173c <atoi+0x8>
    174a:	2b 32       	cpi	r18, 0x2B	; 43
    174c:	41 f0       	breq	.+16     	; 0x175e <atoi+0x2a>
    174e:	2d 32       	cpi	r18, 0x2D	; 45
    1750:	39 f4       	brne	.+14     	; 0x1760 <atoi+0x2c>
    1752:	68 94       	set
    1754:	04 c0       	rjmp	.+8      	; 0x175e <atoi+0x2a>
    1756:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__mulhi_const_10>
    175a:	82 0f       	add	r24, r18
    175c:	91 1d       	adc	r25, r1
    175e:	21 91       	ld	r18, Z+
    1760:	20 53       	subi	r18, 0x30	; 48
    1762:	2a 30       	cpi	r18, 0x0A	; 10
    1764:	c0 f3       	brcs	.-16     	; 0x1756 <atoi+0x22>
    1766:	1e f4       	brtc	.+6      	; 0x176e <atoi+0x3a>
    1768:	90 95       	com	r25
    176a:	81 95       	neg	r24
    176c:	9f 4f       	sbci	r25, 0xFF	; 255
    176e:	08 95       	ret

00001770 <strcat>:
    1770:	fb 01       	movw	r30, r22
    1772:	dc 01       	movw	r26, r24
    1774:	0d 90       	ld	r0, X+
    1776:	00 20       	and	r0, r0
    1778:	e9 f7       	brne	.-6      	; 0x1774 <strcat+0x4>
    177a:	11 97       	sbiw	r26, 0x01	; 1
    177c:	01 90       	ld	r0, Z+
    177e:	0d 92       	st	X+, r0
    1780:	00 20       	and	r0, r0
    1782:	e1 f7       	brne	.-8      	; 0x177c <strcat+0xc>
    1784:	08 95       	ret

00001786 <strcpy>:
    1786:	fb 01       	movw	r30, r22
    1788:	dc 01       	movw	r26, r24
    178a:	01 90       	ld	r0, Z+
    178c:	0d 92       	st	X+, r0
    178e:	00 20       	and	r0, r0
    1790:	e1 f7       	brne	.-8      	; 0x178a <strcpy+0x4>
    1792:	08 95       	ret

00001794 <itoa>:
    1794:	45 32       	cpi	r20, 0x25	; 37
    1796:	51 05       	cpc	r21, r1
    1798:	20 f4       	brcc	.+8      	; 0x17a2 <itoa+0xe>
    179a:	42 30       	cpi	r20, 0x02	; 2
    179c:	10 f0       	brcs	.+4      	; 0x17a2 <itoa+0xe>
    179e:	0c 94 d5 0b 	jmp	0x17aa	; 0x17aa <__itoa_ncheck>
    17a2:	fb 01       	movw	r30, r22
    17a4:	10 82       	st	Z, r1
    17a6:	cb 01       	movw	r24, r22
    17a8:	08 95       	ret

000017aa <__itoa_ncheck>:
    17aa:	bb 27       	eor	r27, r27
    17ac:	4a 30       	cpi	r20, 0x0A	; 10
    17ae:	31 f4       	brne	.+12     	; 0x17bc <__itoa_ncheck+0x12>
    17b0:	99 23       	and	r25, r25
    17b2:	22 f4       	brpl	.+8      	; 0x17bc <__itoa_ncheck+0x12>
    17b4:	bd e2       	ldi	r27, 0x2D	; 45
    17b6:	90 95       	com	r25
    17b8:	81 95       	neg	r24
    17ba:	9f 4f       	sbci	r25, 0xFF	; 255
    17bc:	0c 94 e9 0b 	jmp	0x17d2	; 0x17d2 <__utoa_common>

000017c0 <__mulhi_const_10>:
    17c0:	7a e0       	ldi	r23, 0x0A	; 10
    17c2:	97 9f       	mul	r25, r23
    17c4:	90 2d       	mov	r25, r0
    17c6:	87 9f       	mul	r24, r23
    17c8:	80 2d       	mov	r24, r0
    17ca:	91 0d       	add	r25, r1
    17cc:	11 24       	eor	r1, r1
    17ce:	08 95       	ret

000017d0 <__utoa_ncheck>:
    17d0:	bb 27       	eor	r27, r27

000017d2 <__utoa_common>:
    17d2:	fb 01       	movw	r30, r22
    17d4:	55 27       	eor	r21, r21
    17d6:	aa 27       	eor	r26, r26
    17d8:	88 0f       	add	r24, r24
    17da:	99 1f       	adc	r25, r25
    17dc:	aa 1f       	adc	r26, r26
    17de:	a4 17       	cp	r26, r20
    17e0:	10 f0       	brcs	.+4      	; 0x17e6 <__utoa_common+0x14>
    17e2:	a4 1b       	sub	r26, r20
    17e4:	83 95       	inc	r24
    17e6:	50 51       	subi	r21, 0x10	; 16
    17e8:	b9 f7       	brne	.-18     	; 0x17d8 <__utoa_common+0x6>
    17ea:	a0 5d       	subi	r26, 0xD0	; 208
    17ec:	aa 33       	cpi	r26, 0x3A	; 58
    17ee:	08 f0       	brcs	.+2      	; 0x17f2 <__utoa_common+0x20>
    17f0:	a9 5d       	subi	r26, 0xD9	; 217
    17f2:	a1 93       	st	Z+, r26
    17f4:	00 97       	sbiw	r24, 0x00	; 0
    17f6:	79 f7       	brne	.-34     	; 0x17d6 <__utoa_common+0x4>
    17f8:	b1 11       	cpse	r27, r1
    17fa:	b1 93       	st	Z+, r27
    17fc:	11 92       	st	Z+, r1
    17fe:	cb 01       	movw	r24, r22
    1800:	0c 94 34 0e 	jmp	0x1c68	; 0x1c68 <strrev>

00001804 <dtoa_prf>:
    1804:	a9 e0       	ldi	r26, 0x09	; 9
    1806:	b0 e0       	ldi	r27, 0x00	; 0
    1808:	e8 e0       	ldi	r30, 0x08	; 8
    180a:	fc e0       	ldi	r31, 0x0C	; 12
    180c:	0c 94 4a 0e 	jmp	0x1c94	; 0x1c94 <__prologue_saves__+0xc>
    1810:	6a 01       	movw	r12, r20
    1812:	12 2f       	mov	r17, r18
    1814:	b0 2e       	mov	r11, r16
    1816:	2b e3       	ldi	r18, 0x3B	; 59
    1818:	20 17       	cp	r18, r16
    181a:	20 f0       	brcs	.+8      	; 0x1824 <dtoa_prf+0x20>
    181c:	ff 24       	eor	r15, r15
    181e:	f3 94       	inc	r15
    1820:	f0 0e       	add	r15, r16
    1822:	02 c0       	rjmp	.+4      	; 0x1828 <dtoa_prf+0x24>
    1824:	2c e3       	ldi	r18, 0x3C	; 60
    1826:	f2 2e       	mov	r15, r18
    1828:	0f 2d       	mov	r16, r15
    182a:	27 e0       	ldi	r18, 0x07	; 7
    182c:	ae 01       	movw	r20, r28
    182e:	4f 5f       	subi	r20, 0xFF	; 255
    1830:	5f 4f       	sbci	r21, 0xFF	; 255
    1832:	0e 94 5c 0d 	call	0x1ab8	; 0x1ab8 <__ftoa_engine>
    1836:	bc 01       	movw	r22, r24
    1838:	49 81       	ldd	r20, Y+1	; 0x01
    183a:	84 2f       	mov	r24, r20
    183c:	89 70       	andi	r24, 0x09	; 9
    183e:	81 30       	cpi	r24, 0x01	; 1
    1840:	31 f0       	breq	.+12     	; 0x184e <dtoa_prf+0x4a>
    1842:	e1 fc       	sbrc	r14, 1
    1844:	06 c0       	rjmp	.+12     	; 0x1852 <dtoa_prf+0x4e>
    1846:	e0 fe       	sbrs	r14, 0
    1848:	06 c0       	rjmp	.+12     	; 0x1856 <dtoa_prf+0x52>
    184a:	90 e2       	ldi	r25, 0x20	; 32
    184c:	05 c0       	rjmp	.+10     	; 0x1858 <dtoa_prf+0x54>
    184e:	9d e2       	ldi	r25, 0x2D	; 45
    1850:	03 c0       	rjmp	.+6      	; 0x1858 <dtoa_prf+0x54>
    1852:	9b e2       	ldi	r25, 0x2B	; 43
    1854:	01 c0       	rjmp	.+2      	; 0x1858 <dtoa_prf+0x54>
    1856:	90 e0       	ldi	r25, 0x00	; 0
    1858:	5e 2d       	mov	r21, r14
    185a:	50 71       	andi	r21, 0x10	; 16
    185c:	43 ff       	sbrs	r20, 3
    185e:	3c c0       	rjmp	.+120    	; 0x18d8 <dtoa_prf+0xd4>
    1860:	91 11       	cpse	r25, r1
    1862:	02 c0       	rjmp	.+4      	; 0x1868 <dtoa_prf+0x64>
    1864:	83 e0       	ldi	r24, 0x03	; 3
    1866:	01 c0       	rjmp	.+2      	; 0x186a <dtoa_prf+0x66>
    1868:	84 e0       	ldi	r24, 0x04	; 4
    186a:	81 17       	cp	r24, r17
    186c:	18 f4       	brcc	.+6      	; 0x1874 <dtoa_prf+0x70>
    186e:	21 2f       	mov	r18, r17
    1870:	28 1b       	sub	r18, r24
    1872:	01 c0       	rjmp	.+2      	; 0x1876 <dtoa_prf+0x72>
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	51 11       	cpse	r21, r1
    1878:	0b c0       	rjmp	.+22     	; 0x1890 <dtoa_prf+0x8c>
    187a:	f6 01       	movw	r30, r12
    187c:	82 2f       	mov	r24, r18
    187e:	30 e2       	ldi	r19, 0x20	; 32
    1880:	88 23       	and	r24, r24
    1882:	19 f0       	breq	.+6      	; 0x188a <dtoa_prf+0x86>
    1884:	31 93       	st	Z+, r19
    1886:	81 50       	subi	r24, 0x01	; 1
    1888:	fb cf       	rjmp	.-10     	; 0x1880 <dtoa_prf+0x7c>
    188a:	c2 0e       	add	r12, r18
    188c:	d1 1c       	adc	r13, r1
    188e:	20 e0       	ldi	r18, 0x00	; 0
    1890:	99 23       	and	r25, r25
    1892:	29 f0       	breq	.+10     	; 0x189e <dtoa_prf+0x9a>
    1894:	d6 01       	movw	r26, r12
    1896:	9c 93       	st	X, r25
    1898:	f6 01       	movw	r30, r12
    189a:	31 96       	adiw	r30, 0x01	; 1
    189c:	6f 01       	movw	r12, r30
    189e:	c6 01       	movw	r24, r12
    18a0:	03 96       	adiw	r24, 0x03	; 3
    18a2:	e2 fe       	sbrs	r14, 2
    18a4:	0a c0       	rjmp	.+20     	; 0x18ba <dtoa_prf+0xb6>
    18a6:	3e e4       	ldi	r19, 0x4E	; 78
    18a8:	d6 01       	movw	r26, r12
    18aa:	3c 93       	st	X, r19
    18ac:	41 e4       	ldi	r20, 0x41	; 65
    18ae:	11 96       	adiw	r26, 0x01	; 1
    18b0:	4c 93       	st	X, r20
    18b2:	11 97       	sbiw	r26, 0x01	; 1
    18b4:	12 96       	adiw	r26, 0x02	; 2
    18b6:	3c 93       	st	X, r19
    18b8:	06 c0       	rjmp	.+12     	; 0x18c6 <dtoa_prf+0xc2>
    18ba:	3e e6       	ldi	r19, 0x6E	; 110
    18bc:	f6 01       	movw	r30, r12
    18be:	30 83       	st	Z, r19
    18c0:	41 e6       	ldi	r20, 0x61	; 97
    18c2:	41 83       	std	Z+1, r20	; 0x01
    18c4:	32 83       	std	Z+2, r19	; 0x02
    18c6:	fc 01       	movw	r30, r24
    18c8:	32 2f       	mov	r19, r18
    18ca:	40 e2       	ldi	r20, 0x20	; 32
    18cc:	33 23       	and	r19, r19
    18ce:	09 f4       	brne	.+2      	; 0x18d2 <dtoa_prf+0xce>
    18d0:	42 c0       	rjmp	.+132    	; 0x1956 <dtoa_prf+0x152>
    18d2:	41 93       	st	Z+, r20
    18d4:	31 50       	subi	r19, 0x01	; 1
    18d6:	fa cf       	rjmp	.-12     	; 0x18cc <dtoa_prf+0xc8>
    18d8:	42 ff       	sbrs	r20, 2
    18da:	44 c0       	rjmp	.+136    	; 0x1964 <dtoa_prf+0x160>
    18dc:	91 11       	cpse	r25, r1
    18de:	02 c0       	rjmp	.+4      	; 0x18e4 <dtoa_prf+0xe0>
    18e0:	83 e0       	ldi	r24, 0x03	; 3
    18e2:	01 c0       	rjmp	.+2      	; 0x18e6 <dtoa_prf+0xe2>
    18e4:	84 e0       	ldi	r24, 0x04	; 4
    18e6:	81 17       	cp	r24, r17
    18e8:	18 f4       	brcc	.+6      	; 0x18f0 <dtoa_prf+0xec>
    18ea:	21 2f       	mov	r18, r17
    18ec:	28 1b       	sub	r18, r24
    18ee:	01 c0       	rjmp	.+2      	; 0x18f2 <dtoa_prf+0xee>
    18f0:	20 e0       	ldi	r18, 0x00	; 0
    18f2:	51 11       	cpse	r21, r1
    18f4:	0b c0       	rjmp	.+22     	; 0x190c <dtoa_prf+0x108>
    18f6:	f6 01       	movw	r30, r12
    18f8:	82 2f       	mov	r24, r18
    18fa:	30 e2       	ldi	r19, 0x20	; 32
    18fc:	88 23       	and	r24, r24
    18fe:	19 f0       	breq	.+6      	; 0x1906 <dtoa_prf+0x102>
    1900:	31 93       	st	Z+, r19
    1902:	81 50       	subi	r24, 0x01	; 1
    1904:	fb cf       	rjmp	.-10     	; 0x18fc <dtoa_prf+0xf8>
    1906:	c2 0e       	add	r12, r18
    1908:	d1 1c       	adc	r13, r1
    190a:	20 e0       	ldi	r18, 0x00	; 0
    190c:	99 23       	and	r25, r25
    190e:	29 f0       	breq	.+10     	; 0x191a <dtoa_prf+0x116>
    1910:	d6 01       	movw	r26, r12
    1912:	9c 93       	st	X, r25
    1914:	f6 01       	movw	r30, r12
    1916:	31 96       	adiw	r30, 0x01	; 1
    1918:	6f 01       	movw	r12, r30
    191a:	c6 01       	movw	r24, r12
    191c:	03 96       	adiw	r24, 0x03	; 3
    191e:	e2 fe       	sbrs	r14, 2
    1920:	0b c0       	rjmp	.+22     	; 0x1938 <dtoa_prf+0x134>
    1922:	39 e4       	ldi	r19, 0x49	; 73
    1924:	d6 01       	movw	r26, r12
    1926:	3c 93       	st	X, r19
    1928:	3e e4       	ldi	r19, 0x4E	; 78
    192a:	11 96       	adiw	r26, 0x01	; 1
    192c:	3c 93       	st	X, r19
    192e:	11 97       	sbiw	r26, 0x01	; 1
    1930:	36 e4       	ldi	r19, 0x46	; 70
    1932:	12 96       	adiw	r26, 0x02	; 2
    1934:	3c 93       	st	X, r19
    1936:	07 c0       	rjmp	.+14     	; 0x1946 <dtoa_prf+0x142>
    1938:	39 e6       	ldi	r19, 0x69	; 105
    193a:	f6 01       	movw	r30, r12
    193c:	30 83       	st	Z, r19
    193e:	3e e6       	ldi	r19, 0x6E	; 110
    1940:	31 83       	std	Z+1, r19	; 0x01
    1942:	36 e6       	ldi	r19, 0x66	; 102
    1944:	32 83       	std	Z+2, r19	; 0x02
    1946:	fc 01       	movw	r30, r24
    1948:	32 2f       	mov	r19, r18
    194a:	40 e2       	ldi	r20, 0x20	; 32
    194c:	33 23       	and	r19, r19
    194e:	19 f0       	breq	.+6      	; 0x1956 <dtoa_prf+0x152>
    1950:	41 93       	st	Z+, r20
    1952:	31 50       	subi	r19, 0x01	; 1
    1954:	fb cf       	rjmp	.-10     	; 0x194c <dtoa_prf+0x148>
    1956:	fc 01       	movw	r30, r24
    1958:	e2 0f       	add	r30, r18
    195a:	f1 1d       	adc	r31, r1
    195c:	10 82       	st	Z, r1
    195e:	8e ef       	ldi	r24, 0xFE	; 254
    1960:	9f ef       	ldi	r25, 0xFF	; 255
    1962:	a6 c0       	rjmp	.+332    	; 0x1ab0 <dtoa_prf+0x2ac>
    1964:	21 e0       	ldi	r18, 0x01	; 1
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	91 11       	cpse	r25, r1
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <dtoa_prf+0x16c>
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	30 e0       	ldi	r19, 0x00	; 0
    1970:	16 16       	cp	r1, r22
    1972:	17 06       	cpc	r1, r23
    1974:	1c f4       	brge	.+6      	; 0x197c <dtoa_prf+0x178>
    1976:	fb 01       	movw	r30, r22
    1978:	31 96       	adiw	r30, 0x01	; 1
    197a:	02 c0       	rjmp	.+4      	; 0x1980 <dtoa_prf+0x17c>
    197c:	e1 e0       	ldi	r30, 0x01	; 1
    197e:	f0 e0       	ldi	r31, 0x00	; 0
    1980:	2e 0f       	add	r18, r30
    1982:	3f 1f       	adc	r19, r31
    1984:	bb 20       	and	r11, r11
    1986:	21 f0       	breq	.+8      	; 0x1990 <dtoa_prf+0x18c>
    1988:	eb 2d       	mov	r30, r11
    198a:	f0 e0       	ldi	r31, 0x00	; 0
    198c:	31 96       	adiw	r30, 0x01	; 1
    198e:	02 c0       	rjmp	.+4      	; 0x1994 <dtoa_prf+0x190>
    1990:	e0 e0       	ldi	r30, 0x00	; 0
    1992:	f0 e0       	ldi	r31, 0x00	; 0
    1994:	2e 0f       	add	r18, r30
    1996:	3f 1f       	adc	r19, r31
    1998:	e1 2f       	mov	r30, r17
    199a:	f0 e0       	ldi	r31, 0x00	; 0
    199c:	2e 17       	cp	r18, r30
    199e:	3f 07       	cpc	r19, r31
    19a0:	1c f4       	brge	.+6      	; 0x19a8 <dtoa_prf+0x1a4>
    19a2:	12 1b       	sub	r17, r18
    19a4:	21 2f       	mov	r18, r17
    19a6:	01 c0       	rjmp	.+2      	; 0x19aa <dtoa_prf+0x1a6>
    19a8:	20 e0       	ldi	r18, 0x00	; 0
    19aa:	8e 2d       	mov	r24, r14
    19ac:	88 71       	andi	r24, 0x18	; 24
    19ae:	59 f4       	brne	.+22     	; 0x19c6 <dtoa_prf+0x1c2>
    19b0:	f6 01       	movw	r30, r12
    19b2:	82 2f       	mov	r24, r18
    19b4:	30 e2       	ldi	r19, 0x20	; 32
    19b6:	88 23       	and	r24, r24
    19b8:	19 f0       	breq	.+6      	; 0x19c0 <dtoa_prf+0x1bc>
    19ba:	31 93       	st	Z+, r19
    19bc:	81 50       	subi	r24, 0x01	; 1
    19be:	fb cf       	rjmp	.-10     	; 0x19b6 <dtoa_prf+0x1b2>
    19c0:	c2 0e       	add	r12, r18
    19c2:	d1 1c       	adc	r13, r1
    19c4:	20 e0       	ldi	r18, 0x00	; 0
    19c6:	99 23       	and	r25, r25
    19c8:	29 f0       	breq	.+10     	; 0x19d4 <dtoa_prf+0x1d0>
    19ca:	d6 01       	movw	r26, r12
    19cc:	9c 93       	st	X, r25
    19ce:	f6 01       	movw	r30, r12
    19d0:	31 96       	adiw	r30, 0x01	; 1
    19d2:	6f 01       	movw	r12, r30
    19d4:	51 11       	cpse	r21, r1
    19d6:	0b c0       	rjmp	.+22     	; 0x19ee <dtoa_prf+0x1ea>
    19d8:	f6 01       	movw	r30, r12
    19da:	82 2f       	mov	r24, r18
    19dc:	90 e3       	ldi	r25, 0x30	; 48
    19de:	88 23       	and	r24, r24
    19e0:	19 f0       	breq	.+6      	; 0x19e8 <dtoa_prf+0x1e4>
    19e2:	91 93       	st	Z+, r25
    19e4:	81 50       	subi	r24, 0x01	; 1
    19e6:	fb cf       	rjmp	.-10     	; 0x19de <dtoa_prf+0x1da>
    19e8:	c2 0e       	add	r12, r18
    19ea:	d1 1c       	adc	r13, r1
    19ec:	20 e0       	ldi	r18, 0x00	; 0
    19ee:	0f 2d       	mov	r16, r15
    19f0:	06 0f       	add	r16, r22
    19f2:	9a 81       	ldd	r25, Y+2	; 0x02
    19f4:	34 2f       	mov	r19, r20
    19f6:	30 71       	andi	r19, 0x10	; 16
    19f8:	44 ff       	sbrs	r20, 4
    19fa:	03 c0       	rjmp	.+6      	; 0x1a02 <dtoa_prf+0x1fe>
    19fc:	91 33       	cpi	r25, 0x31	; 49
    19fe:	09 f4       	brne	.+2      	; 0x1a02 <dtoa_prf+0x1fe>
    1a00:	01 50       	subi	r16, 0x01	; 1
    1a02:	10 16       	cp	r1, r16
    1a04:	24 f4       	brge	.+8      	; 0x1a0e <dtoa_prf+0x20a>
    1a06:	09 30       	cpi	r16, 0x09	; 9
    1a08:	18 f0       	brcs	.+6      	; 0x1a10 <dtoa_prf+0x20c>
    1a0a:	08 e0       	ldi	r16, 0x08	; 8
    1a0c:	01 c0       	rjmp	.+2      	; 0x1a10 <dtoa_prf+0x20c>
    1a0e:	01 e0       	ldi	r16, 0x01	; 1
    1a10:	ab 01       	movw	r20, r22
    1a12:	77 ff       	sbrs	r23, 7
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <dtoa_prf+0x216>
    1a16:	40 e0       	ldi	r20, 0x00	; 0
    1a18:	50 e0       	ldi	r21, 0x00	; 0
    1a1a:	fb 01       	movw	r30, r22
    1a1c:	e4 1b       	sub	r30, r20
    1a1e:	f5 0b       	sbc	r31, r21
    1a20:	a1 e0       	ldi	r26, 0x01	; 1
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	ac 0f       	add	r26, r28
    1a26:	bd 1f       	adc	r27, r29
    1a28:	ea 0f       	add	r30, r26
    1a2a:	fb 1f       	adc	r31, r27
    1a2c:	8e e2       	ldi	r24, 0x2E	; 46
    1a2e:	a8 2e       	mov	r10, r24
    1a30:	4b 01       	movw	r8, r22
    1a32:	80 1a       	sub	r8, r16
    1a34:	91 08       	sbc	r9, r1
    1a36:	0b 2d       	mov	r16, r11
    1a38:	10 e0       	ldi	r17, 0x00	; 0
    1a3a:	11 95       	neg	r17
    1a3c:	01 95       	neg	r16
    1a3e:	11 09       	sbc	r17, r1
    1a40:	4f 3f       	cpi	r20, 0xFF	; 255
    1a42:	bf ef       	ldi	r27, 0xFF	; 255
    1a44:	5b 07       	cpc	r21, r27
    1a46:	21 f4       	brne	.+8      	; 0x1a50 <dtoa_prf+0x24c>
    1a48:	d6 01       	movw	r26, r12
    1a4a:	ac 92       	st	X, r10
    1a4c:	11 96       	adiw	r26, 0x01	; 1
    1a4e:	6d 01       	movw	r12, r26
    1a50:	64 17       	cp	r22, r20
    1a52:	75 07       	cpc	r23, r21
    1a54:	2c f0       	brlt	.+10     	; 0x1a60 <dtoa_prf+0x25c>
    1a56:	84 16       	cp	r8, r20
    1a58:	95 06       	cpc	r9, r21
    1a5a:	14 f4       	brge	.+4      	; 0x1a60 <dtoa_prf+0x25c>
    1a5c:	81 81       	ldd	r24, Z+1	; 0x01
    1a5e:	01 c0       	rjmp	.+2      	; 0x1a62 <dtoa_prf+0x25e>
    1a60:	80 e3       	ldi	r24, 0x30	; 48
    1a62:	41 50       	subi	r20, 0x01	; 1
    1a64:	51 09       	sbc	r21, r1
    1a66:	31 96       	adiw	r30, 0x01	; 1
    1a68:	d6 01       	movw	r26, r12
    1a6a:	11 96       	adiw	r26, 0x01	; 1
    1a6c:	7d 01       	movw	r14, r26
    1a6e:	40 17       	cp	r20, r16
    1a70:	51 07       	cpc	r21, r17
    1a72:	24 f0       	brlt	.+8      	; 0x1a7c <dtoa_prf+0x278>
    1a74:	d6 01       	movw	r26, r12
    1a76:	8c 93       	st	X, r24
    1a78:	67 01       	movw	r12, r14
    1a7a:	e2 cf       	rjmp	.-60     	; 0x1a40 <dtoa_prf+0x23c>
    1a7c:	64 17       	cp	r22, r20
    1a7e:	75 07       	cpc	r23, r21
    1a80:	39 f4       	brne	.+14     	; 0x1a90 <dtoa_prf+0x28c>
    1a82:	96 33       	cpi	r25, 0x36	; 54
    1a84:	20 f4       	brcc	.+8      	; 0x1a8e <dtoa_prf+0x28a>
    1a86:	95 33       	cpi	r25, 0x35	; 53
    1a88:	19 f4       	brne	.+6      	; 0x1a90 <dtoa_prf+0x28c>
    1a8a:	31 11       	cpse	r19, r1
    1a8c:	01 c0       	rjmp	.+2      	; 0x1a90 <dtoa_prf+0x28c>
    1a8e:	81 e3       	ldi	r24, 0x31	; 49
    1a90:	f6 01       	movw	r30, r12
    1a92:	80 83       	st	Z, r24
    1a94:	f7 01       	movw	r30, r14
    1a96:	82 2f       	mov	r24, r18
    1a98:	90 e2       	ldi	r25, 0x20	; 32
    1a9a:	88 23       	and	r24, r24
    1a9c:	19 f0       	breq	.+6      	; 0x1aa4 <dtoa_prf+0x2a0>
    1a9e:	91 93       	st	Z+, r25
    1aa0:	81 50       	subi	r24, 0x01	; 1
    1aa2:	fb cf       	rjmp	.-10     	; 0x1a9a <dtoa_prf+0x296>
    1aa4:	f7 01       	movw	r30, r14
    1aa6:	e2 0f       	add	r30, r18
    1aa8:	f1 1d       	adc	r31, r1
    1aaa:	10 82       	st	Z, r1
    1aac:	80 e0       	ldi	r24, 0x00	; 0
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	29 96       	adiw	r28, 0x09	; 9
    1ab2:	ec e0       	ldi	r30, 0x0C	; 12
    1ab4:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__epilogue_restores__+0xc>

00001ab8 <__ftoa_engine>:
    1ab8:	28 30       	cpi	r18, 0x08	; 8
    1aba:	08 f0       	brcs	.+2      	; 0x1abe <__ftoa_engine+0x6>
    1abc:	27 e0       	ldi	r18, 0x07	; 7
    1abe:	33 27       	eor	r19, r19
    1ac0:	da 01       	movw	r26, r20
    1ac2:	99 0f       	add	r25, r25
    1ac4:	31 1d       	adc	r19, r1
    1ac6:	87 fd       	sbrc	r24, 7
    1ac8:	91 60       	ori	r25, 0x01	; 1
    1aca:	00 96       	adiw	r24, 0x00	; 0
    1acc:	61 05       	cpc	r22, r1
    1ace:	71 05       	cpc	r23, r1
    1ad0:	39 f4       	brne	.+14     	; 0x1ae0 <__ftoa_engine+0x28>
    1ad2:	32 60       	ori	r19, 0x02	; 2
    1ad4:	2e 5f       	subi	r18, 0xFE	; 254
    1ad6:	3d 93       	st	X+, r19
    1ad8:	30 e3       	ldi	r19, 0x30	; 48
    1ada:	2a 95       	dec	r18
    1adc:	e1 f7       	brne	.-8      	; 0x1ad6 <__ftoa_engine+0x1e>
    1ade:	08 95       	ret
    1ae0:	9f 3f       	cpi	r25, 0xFF	; 255
    1ae2:	30 f0       	brcs	.+12     	; 0x1af0 <__ftoa_engine+0x38>
    1ae4:	80 38       	cpi	r24, 0x80	; 128
    1ae6:	71 05       	cpc	r23, r1
    1ae8:	61 05       	cpc	r22, r1
    1aea:	09 f0       	breq	.+2      	; 0x1aee <__ftoa_engine+0x36>
    1aec:	3c 5f       	subi	r19, 0xFC	; 252
    1aee:	3c 5f       	subi	r19, 0xFC	; 252
    1af0:	3d 93       	st	X+, r19
    1af2:	91 30       	cpi	r25, 0x01	; 1
    1af4:	08 f0       	brcs	.+2      	; 0x1af8 <__ftoa_engine+0x40>
    1af6:	80 68       	ori	r24, 0x80	; 128
    1af8:	91 1d       	adc	r25, r1
    1afa:	df 93       	push	r29
    1afc:	cf 93       	push	r28
    1afe:	1f 93       	push	r17
    1b00:	0f 93       	push	r16
    1b02:	ff 92       	push	r15
    1b04:	ef 92       	push	r14
    1b06:	19 2f       	mov	r17, r25
    1b08:	98 7f       	andi	r25, 0xF8	; 248
    1b0a:	96 95       	lsr	r25
    1b0c:	e9 2f       	mov	r30, r25
    1b0e:	96 95       	lsr	r25
    1b10:	96 95       	lsr	r25
    1b12:	e9 0f       	add	r30, r25
    1b14:	ff 27       	eor	r31, r31
    1b16:	ee 53       	subi	r30, 0x3E	; 62
    1b18:	ff 4f       	sbci	r31, 0xFF	; 255
    1b1a:	99 27       	eor	r25, r25
    1b1c:	33 27       	eor	r19, r19
    1b1e:	ee 24       	eor	r14, r14
    1b20:	ff 24       	eor	r15, r15
    1b22:	a7 01       	movw	r20, r14
    1b24:	e7 01       	movw	r28, r14
    1b26:	05 90       	lpm	r0, Z+
    1b28:	08 94       	sec
    1b2a:	07 94       	ror	r0
    1b2c:	28 f4       	brcc	.+10     	; 0x1b38 <__ftoa_engine+0x80>
    1b2e:	36 0f       	add	r19, r22
    1b30:	e7 1e       	adc	r14, r23
    1b32:	f8 1e       	adc	r15, r24
    1b34:	49 1f       	adc	r20, r25
    1b36:	51 1d       	adc	r21, r1
    1b38:	66 0f       	add	r22, r22
    1b3a:	77 1f       	adc	r23, r23
    1b3c:	88 1f       	adc	r24, r24
    1b3e:	99 1f       	adc	r25, r25
    1b40:	06 94       	lsr	r0
    1b42:	a1 f7       	brne	.-24     	; 0x1b2c <__ftoa_engine+0x74>
    1b44:	05 90       	lpm	r0, Z+
    1b46:	07 94       	ror	r0
    1b48:	28 f4       	brcc	.+10     	; 0x1b54 <__ftoa_engine+0x9c>
    1b4a:	e7 0e       	add	r14, r23
    1b4c:	f8 1e       	adc	r15, r24
    1b4e:	49 1f       	adc	r20, r25
    1b50:	56 1f       	adc	r21, r22
    1b52:	c1 1d       	adc	r28, r1
    1b54:	77 0f       	add	r23, r23
    1b56:	88 1f       	adc	r24, r24
    1b58:	99 1f       	adc	r25, r25
    1b5a:	66 1f       	adc	r22, r22
    1b5c:	06 94       	lsr	r0
    1b5e:	a1 f7       	brne	.-24     	; 0x1b48 <__ftoa_engine+0x90>
    1b60:	05 90       	lpm	r0, Z+
    1b62:	07 94       	ror	r0
    1b64:	28 f4       	brcc	.+10     	; 0x1b70 <__ftoa_engine+0xb8>
    1b66:	f8 0e       	add	r15, r24
    1b68:	49 1f       	adc	r20, r25
    1b6a:	56 1f       	adc	r21, r22
    1b6c:	c7 1f       	adc	r28, r23
    1b6e:	d1 1d       	adc	r29, r1
    1b70:	88 0f       	add	r24, r24
    1b72:	99 1f       	adc	r25, r25
    1b74:	66 1f       	adc	r22, r22
    1b76:	77 1f       	adc	r23, r23
    1b78:	06 94       	lsr	r0
    1b7a:	a1 f7       	brne	.-24     	; 0x1b64 <__ftoa_engine+0xac>
    1b7c:	05 90       	lpm	r0, Z+
    1b7e:	07 94       	ror	r0
    1b80:	20 f4       	brcc	.+8      	; 0x1b8a <__ftoa_engine+0xd2>
    1b82:	49 0f       	add	r20, r25
    1b84:	56 1f       	adc	r21, r22
    1b86:	c7 1f       	adc	r28, r23
    1b88:	d8 1f       	adc	r29, r24
    1b8a:	99 0f       	add	r25, r25
    1b8c:	66 1f       	adc	r22, r22
    1b8e:	77 1f       	adc	r23, r23
    1b90:	88 1f       	adc	r24, r24
    1b92:	06 94       	lsr	r0
    1b94:	a9 f7       	brne	.-22     	; 0x1b80 <__ftoa_engine+0xc8>
    1b96:	84 91       	lpm	r24, Z
    1b98:	10 95       	com	r17
    1b9a:	17 70       	andi	r17, 0x07	; 7
    1b9c:	41 f0       	breq	.+16     	; 0x1bae <__ftoa_engine+0xf6>
    1b9e:	d6 95       	lsr	r29
    1ba0:	c7 95       	ror	r28
    1ba2:	57 95       	ror	r21
    1ba4:	47 95       	ror	r20
    1ba6:	f7 94       	ror	r15
    1ba8:	e7 94       	ror	r14
    1baa:	1a 95       	dec	r17
    1bac:	c1 f7       	brne	.-16     	; 0x1b9e <__ftoa_engine+0xe6>
    1bae:	e8 e6       	ldi	r30, 0x68	; 104
    1bb0:	f0 e0       	ldi	r31, 0x00	; 0
    1bb2:	68 94       	set
    1bb4:	15 90       	lpm	r1, Z+
    1bb6:	15 91       	lpm	r17, Z+
    1bb8:	35 91       	lpm	r19, Z+
    1bba:	65 91       	lpm	r22, Z+
    1bbc:	95 91       	lpm	r25, Z+
    1bbe:	05 90       	lpm	r0, Z+
    1bc0:	7f e2       	ldi	r23, 0x2F	; 47
    1bc2:	73 95       	inc	r23
    1bc4:	e1 18       	sub	r14, r1
    1bc6:	f1 0a       	sbc	r15, r17
    1bc8:	43 0b       	sbc	r20, r19
    1bca:	56 0b       	sbc	r21, r22
    1bcc:	c9 0b       	sbc	r28, r25
    1bce:	d0 09       	sbc	r29, r0
    1bd0:	c0 f7       	brcc	.-16     	; 0x1bc2 <__ftoa_engine+0x10a>
    1bd2:	e1 0c       	add	r14, r1
    1bd4:	f1 1e       	adc	r15, r17
    1bd6:	43 1f       	adc	r20, r19
    1bd8:	56 1f       	adc	r21, r22
    1bda:	c9 1f       	adc	r28, r25
    1bdc:	d0 1d       	adc	r29, r0
    1bde:	7e f4       	brtc	.+30     	; 0x1bfe <__ftoa_engine+0x146>
    1be0:	70 33       	cpi	r23, 0x30	; 48
    1be2:	11 f4       	brne	.+4      	; 0x1be8 <__ftoa_engine+0x130>
    1be4:	8a 95       	dec	r24
    1be6:	e6 cf       	rjmp	.-52     	; 0x1bb4 <__ftoa_engine+0xfc>
    1be8:	e8 94       	clt
    1bea:	01 50       	subi	r16, 0x01	; 1
    1bec:	30 f0       	brcs	.+12     	; 0x1bfa <__ftoa_engine+0x142>
    1bee:	08 0f       	add	r16, r24
    1bf0:	0a f4       	brpl	.+2      	; 0x1bf4 <__ftoa_engine+0x13c>
    1bf2:	00 27       	eor	r16, r16
    1bf4:	02 17       	cp	r16, r18
    1bf6:	08 f4       	brcc	.+2      	; 0x1bfa <__ftoa_engine+0x142>
    1bf8:	20 2f       	mov	r18, r16
    1bfa:	23 95       	inc	r18
    1bfc:	02 2f       	mov	r16, r18
    1bfe:	7a 33       	cpi	r23, 0x3A	; 58
    1c00:	28 f0       	brcs	.+10     	; 0x1c0c <__ftoa_engine+0x154>
    1c02:	79 e3       	ldi	r23, 0x39	; 57
    1c04:	7d 93       	st	X+, r23
    1c06:	2a 95       	dec	r18
    1c08:	e9 f7       	brne	.-6      	; 0x1c04 <__ftoa_engine+0x14c>
    1c0a:	10 c0       	rjmp	.+32     	; 0x1c2c <__ftoa_engine+0x174>
    1c0c:	7d 93       	st	X+, r23
    1c0e:	2a 95       	dec	r18
    1c10:	89 f6       	brne	.-94     	; 0x1bb4 <__ftoa_engine+0xfc>
    1c12:	06 94       	lsr	r0
    1c14:	97 95       	ror	r25
    1c16:	67 95       	ror	r22
    1c18:	37 95       	ror	r19
    1c1a:	17 95       	ror	r17
    1c1c:	17 94       	ror	r1
    1c1e:	e1 18       	sub	r14, r1
    1c20:	f1 0a       	sbc	r15, r17
    1c22:	43 0b       	sbc	r20, r19
    1c24:	56 0b       	sbc	r21, r22
    1c26:	c9 0b       	sbc	r28, r25
    1c28:	d0 09       	sbc	r29, r0
    1c2a:	98 f0       	brcs	.+38     	; 0x1c52 <__ftoa_engine+0x19a>
    1c2c:	23 95       	inc	r18
    1c2e:	7e 91       	ld	r23, -X
    1c30:	73 95       	inc	r23
    1c32:	7a 33       	cpi	r23, 0x3A	; 58
    1c34:	08 f0       	brcs	.+2      	; 0x1c38 <__ftoa_engine+0x180>
    1c36:	70 e3       	ldi	r23, 0x30	; 48
    1c38:	7c 93       	st	X, r23
    1c3a:	20 13       	cpse	r18, r16
    1c3c:	b8 f7       	brcc	.-18     	; 0x1c2c <__ftoa_engine+0x174>
    1c3e:	7e 91       	ld	r23, -X
    1c40:	70 61       	ori	r23, 0x10	; 16
    1c42:	7d 93       	st	X+, r23
    1c44:	30 f0       	brcs	.+12     	; 0x1c52 <__ftoa_engine+0x19a>
    1c46:	83 95       	inc	r24
    1c48:	71 e3       	ldi	r23, 0x31	; 49
    1c4a:	7d 93       	st	X+, r23
    1c4c:	70 e3       	ldi	r23, 0x30	; 48
    1c4e:	2a 95       	dec	r18
    1c50:	e1 f7       	brne	.-8      	; 0x1c4a <__ftoa_engine+0x192>
    1c52:	11 24       	eor	r1, r1
    1c54:	ef 90       	pop	r14
    1c56:	ff 90       	pop	r15
    1c58:	0f 91       	pop	r16
    1c5a:	1f 91       	pop	r17
    1c5c:	cf 91       	pop	r28
    1c5e:	df 91       	pop	r29
    1c60:	99 27       	eor	r25, r25
    1c62:	87 fd       	sbrc	r24, 7
    1c64:	90 95       	com	r25
    1c66:	08 95       	ret

00001c68 <strrev>:
    1c68:	dc 01       	movw	r26, r24
    1c6a:	fc 01       	movw	r30, r24
    1c6c:	67 2f       	mov	r22, r23
    1c6e:	71 91       	ld	r23, Z+
    1c70:	77 23       	and	r23, r23
    1c72:	e1 f7       	brne	.-8      	; 0x1c6c <strrev+0x4>
    1c74:	32 97       	sbiw	r30, 0x02	; 2
    1c76:	04 c0       	rjmp	.+8      	; 0x1c80 <strrev+0x18>
    1c78:	7c 91       	ld	r23, X
    1c7a:	6d 93       	st	X+, r22
    1c7c:	70 83       	st	Z, r23
    1c7e:	62 91       	ld	r22, -Z
    1c80:	ae 17       	cp	r26, r30
    1c82:	bf 07       	cpc	r27, r31
    1c84:	c8 f3       	brcs	.-14     	; 0x1c78 <strrev+0x10>
    1c86:	08 95       	ret

00001c88 <__prologue_saves__>:
    1c88:	2f 92       	push	r2
    1c8a:	3f 92       	push	r3
    1c8c:	4f 92       	push	r4
    1c8e:	5f 92       	push	r5
    1c90:	6f 92       	push	r6
    1c92:	7f 92       	push	r7
    1c94:	8f 92       	push	r8
    1c96:	9f 92       	push	r9
    1c98:	af 92       	push	r10
    1c9a:	bf 92       	push	r11
    1c9c:	cf 92       	push	r12
    1c9e:	df 92       	push	r13
    1ca0:	ef 92       	push	r14
    1ca2:	ff 92       	push	r15
    1ca4:	0f 93       	push	r16
    1ca6:	1f 93       	push	r17
    1ca8:	cf 93       	push	r28
    1caa:	df 93       	push	r29
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	ca 1b       	sub	r28, r26
    1cb2:	db 0b       	sbc	r29, r27
    1cb4:	0f b6       	in	r0, 0x3f	; 63
    1cb6:	f8 94       	cli
    1cb8:	de bf       	out	0x3e, r29	; 62
    1cba:	0f be       	out	0x3f, r0	; 63
    1cbc:	cd bf       	out	0x3d, r28	; 61
    1cbe:	09 94       	ijmp

00001cc0 <__epilogue_restores__>:
    1cc0:	2a 88       	ldd	r2, Y+18	; 0x12
    1cc2:	39 88       	ldd	r3, Y+17	; 0x11
    1cc4:	48 88       	ldd	r4, Y+16	; 0x10
    1cc6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cc8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cca:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ccc:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cce:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cd0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cd2:	b9 84       	ldd	r11, Y+9	; 0x09
    1cd4:	c8 84       	ldd	r12, Y+8	; 0x08
    1cd6:	df 80       	ldd	r13, Y+7	; 0x07
    1cd8:	ee 80       	ldd	r14, Y+6	; 0x06
    1cda:	fd 80       	ldd	r15, Y+5	; 0x05
    1cdc:	0c 81       	ldd	r16, Y+4	; 0x04
    1cde:	1b 81       	ldd	r17, Y+3	; 0x03
    1ce0:	aa 81       	ldd	r26, Y+2	; 0x02
    1ce2:	b9 81       	ldd	r27, Y+1	; 0x01
    1ce4:	ce 0f       	add	r28, r30
    1ce6:	d1 1d       	adc	r29, r1
    1ce8:	0f b6       	in	r0, 0x3f	; 63
    1cea:	f8 94       	cli
    1cec:	de bf       	out	0x3e, r29	; 62
    1cee:	0f be       	out	0x3f, r0	; 63
    1cf0:	cd bf       	out	0x3d, r28	; 61
    1cf2:	ed 01       	movw	r28, r26
    1cf4:	08 95       	ret

00001cf6 <_exit>:
    1cf6:	f8 94       	cli

00001cf8 <__stop_program>:
    1cf8:	ff cf       	rjmp	.-2      	; 0x1cf8 <__stop_program>
